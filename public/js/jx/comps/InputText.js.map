{"version":3,"sources":["../../../src/jx/comps/InputText.js"],"names":["textInput","InputText","dataObject","addEventDispatcher","view","$","find","prop","editable","undefined","html","description","value","on","event","text","onchange","dispatch","target"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,QAAIA,iTAAJ;;QASqBC,S;;;AACjB,2BAAYC,UAAZ,EAAwB;AAAA;;AAAA,yHACdA,UADc;AAEvB;;;;sCACS;AACN;AACA,qBAAKC,kBAAL,CAAwB,UAAxB;AACA,qBAAKC,IAAL,GAAYC,EAAEL,SAAF,CAAZ;AACH;;;wCACW;AAAA;;AACR;AACA,qBAAKI,IAAL,CAAUE,IAAV,CAAe,QAAf,EAAyBC,IAAzB,CAA8B,UAA9B,EAA2C,KAAKH,IAAL,CAAUI,QAAV,IAAsBC,SAAvB,GAAoC,CAAC,KAAKL,IAAL,CAAUI,QAA/C,GAA0D,KAApG;AACA,qBAAKJ,IAAL,CAAUE,IAAV,CAAe,cAAf,EAA+BI,IAA/B,CAAoC,KAAKR,UAAL,CAAgBS,WAAhB,IAA+B,EAAnE;AACA,qBAAKP,IAAL,CAAUE,IAAV,CAAe,QAAf,EAAyBI,IAAzB,CAA8B,KAAKN,IAAL,CAAUQ,KAAV,IAAmB,EAAjD;AACA,qBAAKR,IAAL,CAAUS,EAAV,CAAa,QAAb,EAAuB,UAACC,KAAD,EAAW;AAC9B,2BAAKC,IAAL,GAAY,OAAKA,IAAjB;AACA,2BAAKC,QAAL,CAAcC,QAAd,CAAuB,EAAEC,cAAF,EAAvB;AACH,iBAHD;AAIH;;;8BACQN,K,EAAO;AACZ,qBAAKR,IAAL,CAAUE,IAAV,CAAe,QAAf,EAAyBI,IAAzB,CAA8BE,KAA9B;AACH,a;gCACU;AACP,uBAAO,KAAKR,IAAL,CAAUE,IAAV,CAAe,QAAf,EAAyB,CAAzB,EAA4BM,KAAnC;AACH;;;;;;sBAxBgBX,S","file":"InputText.js","sourcesContent":["import VisualComponentDOM from \"jx/comps/visualcomponent/VisualComponentDOM\";\nlet textInput = `\n<div class=\"form-group row\">\n   <div class=\"col-xs-6\">\n        <textarea id=\"value\" type=\"textarea\" style=\"resize:vertical\" spellcheck=\"true\"  rows=\"1\" class=\"form-control\">$VALUE</textarea>\n   </div>\n   <div class=\"col-xs-6\" id=\"description\">\n   </div>\n </div>\n`;\nexport default class InputText extends VisualComponentDOM {\n    constructor(dataObject) {\n        super(dataObject);\n    }\n    _create() {\n        super._create();\n        this.addEventDispatcher(\"onchange\");\n        this.view = $(textInput);\n    }\n    _initSync() {\n        super._initSync();\n        this.view.find(\"#value\").prop('readonly', (this.view.editable != undefined) ? !this.view.editable : false);\n        this.view.find(\"#description\").html(this.dataObject.description || \"\");\n        this.view.find(\"#value\").html(this.view.value || \"\");\n        this.view.on(\"change\", (event) => {\n            this.text = this.text;\n            this.onchange.dispatch({ target: this });\n        });\n    }\n    set text(value) {\n        this.view.find(\"#value\").html(value);\n    }\n    get text() {\n        return this.view.find(\"#value\")[0].value;\n    }\n}\n"]}