{"version":3,"sources":["../../../../src/jx/comps/flashlib/FlashLib.js"],"names":["FlashLib","dataObject","Object","assign","id","resourceID","toRasterize","onInitialised","event","targetParent","resLib","jx","db","findOne","mainID","mainSymbolID","_lib","data","libProperties","properties","flashExportIDE","versionIDE","_spriteSheetBuilder","lib","params","syslog","tools","mergeObject","type","clip","optimised","exclude","toFreeze","result","_scanClip","scan","child","notToRasterize","toOptimise","toCache","include","scaleFactor","config","urlParams","undefined","i","length","k","name","search","infosChild","cache","freeze","flashOptimizer","cacheStatics","args","bounds","getBounds","nominalBounds","x","y","width","height","qualityFactor","quality","window","devicePixelRatio","ratio","Math","max","system","screen","resolution","scaleX","scaleY","scaleTotal","syswarn","min","cacheCanvas","syserror","sysinfo","push","framerate","fps","jxRasterised","jxloops","Number","instanceType","gotoAndStop","tickEnabled","rasteriseScale","loop","timeline","jxmc","addEventListener","evt","target","position","duration","removeAllEventListeners","stop","gotoAndPlay","rasterize","items","onFinished","_rasterizeTimeStart","Date","now","rasterClip","getRasterizedClip","path","cjs","getAbsolutePath","parent","sprite","rotation","mc","loops","addChild","setChildIndex","getChildIndex","removeChild","play","view","getFromSymbol","arrangeFlashClipsNames","classType","nameMatches","nameSuffix","nameArgs","compTypes","img","anim","text","cont","children","_getClassName","match","newName","replace","nameCommand","flaInfo","fullName","resultChild","concat","ide","totalFrames","clips","flashLib","visible","cjsClip","classTypes","createjs","MovieClip","Text","Bitmap","Container","Shape","scale","symbolID","prop"],"mappings":"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","file":"FlashLib.js","sourcesContent":["import Clip from \"jx/comps/clip/Clip\";\nimport Component from \"jx/core/comps/Component\";\nimport SpriteSheetFactory from \"jx/comps/flashlib/SpriteSheetFactory\";\nexport default class FlashLib extends Component {\n    constructor(dataObject) {\n        super(Object.assign({ id: \"\", resourceID: null, toRasterize: [], onInitialised: function (event) { } }, dataObject));\n        this.targetParent = this.dataObject.targetParent;\n        this.resourceID = this.dataObject.resourceID;\n        var resLib = this.jx.db.findOne({ id: this.dataObject.resourceID });\n        this.mainID = resLib.mainSymbolID; //resLib.src.split(\"/\").pop();\n        this._lib = resLib.data;\n        this.libProperties = this._lib.properties;\n        this.flashExportIDE = resLib.versionIDE;\n        this._spriteSheetBuilder = new SpriteSheetFactory({ jx: this.jx, lib: this, toRasterize: this.dataObject.toRasterize, onInitialised: this.dataObject.onInitialised });\n    }\n    getAs(params) {\n        this.jx.syslog(\"FlashLib.getAs\", params);\n        params = this.jx.tools.mergeObject({ type: \"auto\", clip: null, optimised: true, exclude: [], toFreeze: [], onInitialised: evt => { } }, params);\n        this[\"_getas_\" + params.type](params);\n    }\n    _getas_auto(params) {\n        //this.jx.syslog(\"params.toFreeze\", params.toFreeze)\n        var result = this._scanClip(params);\n        //this.jx.syslog(result)\n        var clip = result.clip;\n        var scan = result.scan;\n        var child;\n        var toRasterize = [];\n        var notToRasterize = [];\n        var toOptimise = false;\n        var toFreeze = false;\n        var toCache = false;\n        var include = params.include || null;\n        var scaleFactor = this.jx.config.urlParams.scaleFactor != undefined ? this.jx.config.urlParams.scaleFactor : 1;\n        for (var i = 0; i < scan.length; i++) {\n            child = scan[i].clip;\n            //this.jx.syslog(child)\n            if (!params.include) {\n                toFreeze = false;\n                for (var k = 0; k < params.toFreeze.length; k++) {\n                    if (child.name.search(params.toFreeze[k]) != -1) {\n                        toFreeze = true;\n                        break;\n                    }\n                    ;\n                }\n                ;\n                toOptimise = true;\n                for (var k = 0; k < params.exclude.length; k++) {\n                    if (child.name.search(params.exclude[k]) != -1 || this._lib[params.exclude[k]]) {\n                        toOptimise = false;\n                        break;\n                    }\n                    ;\n                }\n                ;\n                toOptimise = toOptimise && params.optimised;\n            }\n            else {\n                toOptimise = false;\n                for (var k = 0; k < params.include.length; k++) {\n                    if (child.name.search(params.include[k].id) != -1) {\n                        var infosChild = Object.assign({\n                            id: null,\n                            cache: true,\n                            freeze: -1\n                        }, params.include[k]);\n                        toFreeze = infosChild.freeze;\n                        toCache = infosChild.cache;\n                        toOptimise = true;\n                        break;\n                    }\n                }\n            }\n            switch (scan[i].type) {\n                case \"Image\":\n                    if ((this.jx.config.flashOptimizer.cacheStatics == \"always\" && scan[i].args != \"nocache\")\n                        || (this.jx.config.flashOptimizer.cacheStatics == \"if_optimisation\" && toOptimise && scan[i].args != \"nocache\")) {\n                        var bounds = child.getBounds() || child.nominalBounds || { x: 0, y: 0, width: 1, height: 1 };\n                        let qualityFactor = this.jx.config.flashOptimizer.quality == \"best\" ? window.devicePixelRatio : 1;\n                        let ratio = Math.max(this.jx.config.system.screen.resolution.width, this.jx.config.system.screen.resolution.height) / Math.max(bounds.width * child.scaleX, bounds.height * child.scaleY);\n                        ratio = ratio < 1 ? ratio : 1;\n                        let scaleTotal = Math.max(child.scaleX, child.scaleY) * ratio * scaleFactor * qualityFactor;\n                        if (bounds.width * scaleTotal > 2048 || bounds.height * scaleTotal > 2048) {\n                            this.jx.syswarn(\"Image Cache reaches max limits 2048 and has been reduced to fit in limits\", child);\n                            scaleTotal = Math.min(2048 / bounds.width, 2048 / bounds.height);\n                            // this.jx.syslog(scaleTotal, bounds.width * scaleTotal, bounds.height * scaleTotal)\n                        }\n                        ;\n                        child.cache(bounds.x, bounds.y, bounds.width, bounds.height, scaleTotal);\n                        if (child.cacheCanvas.width > 2048 || child.cacheCanvas.height > 2048) {\n                            this.jx.syserror(\"Image Cache reaches max limits 2048 (reduction auto has not working)\", child.cacheCanvas, child);\n                        }\n                        else {\n                            this.jx.sysinfo(\"Image Cache\", child.cacheCanvas.width, child.cacheCanvas, this.jx.config.system.screen.resolution, child);\n                        }\n                    }\n                    else {\n                        notToRasterize.push(child);\n                    }\n                    break;\n                case \"Animation\":\n                    child.framerate = params.framerate || this._lib.properties.fps || this.jx.config.framerate;\n                    child.jxRasterised = toOptimise;\n                    child.jxloops = scan[i].args == \"\" ? 0 : Number(scan[i].args);\n                    if (toOptimise) {\n                        if (toFreeze !== -1 && toFreeze !== false) {\n                            var bounds = child.getBounds() || child.nominalBounds || { x: 0, y: 0, width: 1, height: 1 };\n                            if (this.jx.tools.instanceType(toFreeze) == \"number\") {\n                                child.gotoAndStop(toFreeze);\n                            }\n                            child.tickEnabled = false;\n                            if (toCache) {\n                                child.cache(bounds.x, bounds.y, bounds.width, bounds.height, Math.max(child.scaleX, child.scaleY) * scaleFactor);\n                            }\n                            ;\n                        }\n                        else {\n                            child.rasteriseScale = Math.max(child.scaleX, child.scaleY) * scaleFactor;\n                            toRasterize.push(child);\n                        }\n                    }\n                    else {\n                        notToRasterize.push(child);\n                        if (child.jxloops > 0) {\n                            child.loop = true;\n                            child.timeline.jxmc = child;\n                            child.timeline.addEventListener(\"change\", evt => {\n                                //this.jx.syslog(\"change\"+  evt.target.position, evt.target.duration);\n                                if (evt.target.position >= evt.target.duration - 1) {\n                                    //this.jx.syslog(\"finish\"+  evt.target.jxloops, evt.target.jxID);\n                                    evt.target.jxmc.jxloops--;\n                                    if (evt.target.jxmc.jxloops <= 0) {\n                                        evt.target.removeAllEventListeners();\n                                        evt.target.jxmc.stop();\n                                        ;\n                                    }\n                                    ;\n                                }\n                                ;\n                            });\n                        }\n                        ;\n                        child.gotoAndPlay(0);\n                    }\n                    break;\n                case \"Text\":\n                    // WARNING, must not be used, because font used must be installed on device of integrator when publishing flashtml. Texts are dynamically created. TODO\n                    if (toOptimise) {\n                        var bounds = child.getBounds() || child.nominalBounds || { x: 0, y: 0, width: 1, height: 1 };\n                        child.cache(bounds.x, bounds.y, bounds.width, bounds.height, Math.max(child.scaleX, child.scaleY) * scaleFactor);\n                    }\n                    else {\n                        notToRasterize.push(child);\n                    }\n                    break;\n                case \"Container\":\n                    // no actually optimization, only scan children\n                    //child.framerate = params.framerate || this._lib.properties.fps || this.jx.config.framerate;\n                    break;\n            }\n        }\n        ;\n        // this.jx.syslog(\"ToRasteriseClips\", toRasterize)\n        // this.jx.syslog(\"NOT ToRasteriseClips\", notToRasterize)\n        this.rasterize({ items: toRasterize, onFinished: (event) => {\n                this._rasterizeTimeStart = Date.now();\n                //this.jx.syslog(\"init clips\", (Date.now() - this._rasterizeTimeStart)/1000, \"secondes\")\n                for (var i = 0; i < toRasterize.length; i++) {\n                    var rasterClip = this.getRasterizedClip({\n                        id: toRasterize[i].name,\n                        path: this.jx.tools.cjs.getAbsolutePath(toRasterize[i]),\n                        parent: toRasterize[i].parent\n                    });\n                    var parent = toRasterize[i].parent;\n                    rasterClip.sprite.stop();\n                    rasterClip.sprite.rotation = rasterClip.mc.rotation;\n                    rasterClip.sprite.framerate = params.framerate || this._lib.properties.fps || this.jx.config.framerate;\n                    rasterClip.sprite.loops = toRasterize[i].jxloops || 0;\n                    parent.addChild(rasterClip.sprite);\n                    parent.setChildIndex(rasterClip.sprite, parent.getChildIndex(rasterClip.mc));\n                    parent.removeChild(rasterClip.mc);\n                    //this.jx.syswarn(toRasterize[i].name , parent, parent.name, parent.children.length)\n                    if (toRasterize[i].name) {\n                        parent[toRasterize[i].name] = rasterClip.sprite;\n                    }\n                    ;\n                    if (rasterClip.sprite.loops > 0) {\n                        rasterClip.sprite.addEventListener(\"animationend\", evt => {\n                            //this.jx.syslog(\"finish\"+  evt.target.loops)\n                            evt.target.loops--;\n                            if (evt.target.loops <= 0) {\n                                evt.target.stop();\n                            }\n                            ;\n                        });\n                    }\n                    ;\n                    rasterClip.sprite.play();\n                }\n                ;\n                this.jx.syslog(\"- getAs End\", (Date.now() - this._rasterizeTimeStart) / 1000, \"secondes\", this);\n                params.onInitialised({ target: this, view: clip });\n            } });\n    }\n    _scanClip(params) {\n        var clip = params.clip || this.getFromSymbol(\"$main\");\n        this.jx.tools.cjs.arrangeFlashClipsNames(clip);\n        var child;\n        var classType;\n        var name;\n        var nameMatches;\n        var nameSuffix = \"\";\n        var nameArgs = \"\";\n        var result = [];\n        var compTypes = {\n            img: \"Image\",\n            anim: \"Animation\",\n            text: \"Text\",\n            cont: \"Container\"\n        };\n        for (var i = 0; i < clip.children.length; i++) {\n            child = clip.children[i];\n            //-- detect name\n            name = child.name || \"\";\n            //-- detect exact class type of createjs clip\n            classType = this._getClassName(child);\n            nameSuffix = \"\";\n            nameArgs = \"\";\n            // -- detect if name finishes with comp type code (_..._)\n            // if yes, remove suffix to name\n            // search ???_type_args\n            nameMatches = name.match(/_([^_]*)_([^_]*)$/);\n            if (nameMatches && compTypes[nameMatches[1]]) {\n                nameSuffix = nameMatches[1];\n                nameArgs = nameMatches[2];\n            }\n            else {\n                // search ???_type_\n                nameMatches = name.match(/_([^_]*)_$/);\n                if (nameMatches) {\n                    nameSuffix = nameMatches[1];\n                    nameArgs = \"\";\n                }\n            }\n            if (nameMatches) {\n                var newName = name.replace(nameMatches[0], \"\");\n                //this.jx.syswarn(name, nameMatches[0], nameMatches[1], nameMatches[2], newName)\n                if (child.parent) {\n                    delete child.parent[child.name];\n                    child.parent[newName] = child;\n                }\n                ;\n                child.name = newName;\n            }\n            name = child.name || \"\";\n            //-- get command if exists\n            let nameCommand = null;\n            nameMatches = name.match(/__(.*)$/);\n            if (nameMatches) {\n                nameCommand = nameMatches[1];\n                var newName = name.replace(nameMatches[0], \"\");\n                if (child.parent) {\n                    delete child.parent[child.name];\n                    child.parent[newName] = child;\n                }\n                ;\n                child.name = newName;\n            }\n            child.flaInfo = {\n                fullName: name,\n                nameSuffix: nameSuffix,\n                nameArgs: nameArgs,\n                nameCommand: nameCommand\n            };\n            //-- determine Comp type depends of precedent detection\n            if (nameSuffix != \"\" && compTypes[nameSuffix] != undefined) {\n                // Considers first as nameSuffix type, if defined\n                result.push({ type: compTypes[nameSuffix], clip: child, args: nameArgs });\n                if (nameSuffix == \"cont\") {\n                    var resultChild = this._scanClip({ clip: child });\n                    result = result.concat(resultChild.scan);\n                }\n            }\n            else if (classType == \"Text\") { // textfield\n                // considers as Text type\n                result.push({ type: \"Text\", clip: child, args: nameArgs });\n            }\n            else if (classType == \"MovieClip\") { // Clip with timeline\n                if (this.flashExportIDE.ide == \"animate\" && child.totalFrames == 1) {\n                    // considers as Image type\n                    result.push({ type: \"Image\", clip: child, args: nameArgs });\n                }\n                else {\n                    // considers as Animation type\n                    result.push({ type: \"Animation\", clip: child, args: nameArgs });\n                }\n            }\n            else if (classType == \"Container\") { // clip with one single frame\n                if (nameSuffix == \"cont\") {\n                    // considers as Container type\n                    result.push({ type: \"Container\", clip: child, args: nameArgs });\n                    var resultChild = this._scanClip({ clip: child });\n                    result = result.concat(resultChild.scan);\n                }\n                else if (nameSuffix == \"text\") {\n                    // considers as Text type\n                    result.push({ type: \"Text\", clip: child, args: nameArgs });\n                }\n                else {\n                    // considers as Image type by default\n                    result.push({ type: \"Image\", clip: child, args: nameArgs });\n                }\n                ;\n            }\n        }\n        ;\n        return { clip: clip, scan: result };\n    }\n    _rasterizeClips({ clips, onFinished = evt => { } }) {\n        this.rasterize(clips, (event) => {\n            //this.jx.syslog(\"rasterized\", event)\n            var rasterClip;\n            for (var i = 0; i < toRasterize.length; i++) {\n                rasterClip = flashLib.getRasterizedClip({\n                    id: toRasterize[i].name,\n                    parent: toRasterize[i].parent\n                });\n                toRasterize[i].visible = false;\n            }\n        }, 1);\n    }\n    _getClassName(cjsClip) {\n        var classTypes = [\n            { name: \"MovieClip\", type: createjs.MovieClip },\n            { name: \"Text\", type: createjs.Text },\n            { name: \"Bitmap\", type: createjs.Bitmap },\n            { name: \"Container\", type: createjs.Container },\n            { name: \"Shape\", type: createjs.Shape }\n        ];\n        for (var i = 0; i < classTypes.length; i++) {\n            if (cjsClip instanceof classTypes[i].type) {\n                return classTypes[i].name;\n            }\n        }\n        ;\n        return null;\n    }\n    // rasterize a simple clip\n    rasterize({ items, onFinished, scale }) {\n        this._spriteSheetBuilder.rasterize(items, onFinished, scale);\n    }\n    getRasterizedClip(params) {\n        return this._spriteSheetBuilder.getRasterizedClip(params);\n    }\n    create({ symbolID }) {\n        if (symbolID.search(/^\\$/) != -1) { // shortcut\n            switch (symbolID) {\n                case \"$main\":\n                    symbolID = this.id;\n                    break;\n            }\n        }\n        return new Clip({ id: symbolID, lib: this });\n    }\n    /**\n     * get clip from creating new one from lib symbol\n     * @param  {string} symbolID\n     * @return {createjs.MovieClip}\n     */\n    getFromSymbol(symbolID) {\n        //this.jx.syslog(this.resourceID, symbolID, this)\n        if (symbolID.search(/^\\$/) != -1) { // shortcut\n            switch (symbolID) {\n                case \"$main\":\n                    symbolID = this.mainID;\n                    break;\n            }\n        }\n        return new this._lib[symbolID]();\n    }\n    getSymbolClass(symbolID) {\n        return this._lib[symbolID];\n    }\n    getMCClass(mc) {\n        for (var prop in this._lib) {\n            if (this.jx.tools.instanceType(this._lib[prop]) == \"function\" && mc instanceof this._lib[prop]) {\n                return prop;\n            }\n        }\n        return null;\n    }\n}\n"]}