{"version":3,"sources":["../../../../src/jx/comps/flashlib/FlashClipLabelManager.js"],"names":["FlashClipLabelManager","dataObject","Object","assign","target","_callback","currentLabel","actions","mainAction","callback","labelToTest","view","getCurrentLabel","console","log","stop","_playComment","_playAnimsOnce","_callCustomFunction","undefined","require","err","commentFounded","commentId","substr","resource","jx","findOne","id","type","dj","voice","play","zap","onfinished","_finish","push","anims","tools","cjs","getChildrenByName","i","length","anim","xen","Clip","clip","actionID","name","totalFrames","bind","splice","apply","event"],"mappings":"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","file":"FlashClipLabelManager.js","sourcesContent":["import Component from \"jx/core/comps/Component\";\nexport default class FlashClipLabelManager extends Component {\n    constructor(dataObject) {\n        super(Object.assign({ target: null }, dataObject));\n        this.target = this.dataObject.target;\n        this._callback = null;\n        this.currentLabel;\n        this.actions = [];\n        this.mainAction = \"sound\";\n    }\n    check({ callback }) {\n        this._callback = callback;\n        var labelToTest = this.target.view.getCurrentLabel();\n        actions = [];\n        console.log(\"check \" + this.currentLabel + \", \" + labelToTest);\n        if (labelToTest == null) {\n            return;\n        }\n        if (labelToTest !== this.currentLabel) {\n            //--- on a changé de label\n            console.log(\"NEW LABEL : \" + labelToTest);\n            this.target.view.stop();\n            currentLabel = labelToTest;\n            //this._showTextes();\n            //this._showPhotos();\n            //this._callCustomFunction1();\n            this._playComment();\n            this._playAnimsOnce();\n            //this._showVideos();\n            //--- Si clips nommés BTN_\n            //--- Si clips nommés SND_\n            //...\n            this._callCustomFunction();\n        }\n    }\n    _callCustomFunction() {\n        //--- APPEL DE FONCTION CUSTOM\n        //On execute la premiere déclaration de fonction trouvée:\n        //1/ fonction xenClip.actions[currentLabel]\n        if (this.target.actions[currentLabel] != undefined) {\n            this.target.actions[currentLabel]();\n        }\n        //2/ la fonction definie dans le fichier \"src/\" + currentLabel (cf require)\n        else {\n            try {\n                console.log(\"src/\" + currentLabel);\n                require(\"src/\" + currentLabel)();\n            }\n            catch (err) {\n            }\n        }\n    }\n    _playComment() {\n        //--- COMMENTAIRE\n        //--- Si commentaire du même nom (moins le _\"), on le joue\n        var commentFounded = false;\n        var commentId = \"S_\" + this.currentLabel.substr(1);\n        var resource = this.jx.findOne({ id: commentId, type: \"Sound\" });\n        if (resource) {\n            this.jx.dj.voice.play({ id: commentId, zap: \"ZAP\", onfinished: evt => { this._finish(this, commentId); } });\n            actions.push({\n                id: commentId,\n                type: \"sound\"\n            });\n        }\n        ;\n    }\n    _playAnimsOnce() {\n        //--- Si clips de nom commencant par anim_, on les joue une fois (ou loop_<nombre de fois>).\n        // console.log(\"this.target.view \"+this.target.view);\n        // console.log(\"this.target.view.name \"+this.target.view.name);\n        var anims = this.jx.tools.cjs.getChildrenByName(this.target.view, \"^anim_\");\n        //console.log(\"anims \"+anims);\n        //console.log(\"anims.length \"+anims.length);\n        for (var i = 0; i < anims.length; i++) {\n            var anim = new xen.Clip({\n                clip: anims[i]\n            });\n            actionID = anim.clip.name;\n            actions.push({\n                id: actionID,\n                type: \"anim\"\n            });\n            //console.log(\"anim.totalFrames \"+anim.totalFrames);\n            anim.play(0, anim.totalFrames, this._finish.bind(this, actionID));\n        }\n    }\n    _showTextes() {\n    }\n    _showPhotos() {\n    }\n    _showVideos() {\n    }\n    _finish(actionID) {\n        if (actionID.type === this.mainAction) {\n        }\n        console.log(\"finish \" + actionID);\n        for (var i = 0; i < actions.length; i++) {\n            if (actions[i].id == actionID) {\n                actions.splice(i, 1);\n            }\n            ;\n        }\n        ;\n        if (actions.length == 0) {\n            this._callback.apply(this.target, [{\n                    event: \"finished\"\n                }]);\n        }\n    }\n}\n// var ClipLabelAnalysis( xenClip ) {\n//     this.target = xenClip;\n//     this.target.view = xenClip.clip;\n//     this._callback = null;\n//     var currentLabel;\n//     var actions = [];\n//     this.mainAction = \"sound\";\n//     this.check( callback ) {\n//         this._callback = callback;\n//         var labelToTest = this.target.view.getCurrentLabel();\n//         actions = [];\n//         console.log( \"check \" + currentLabel + \", \" + labelToTest );\n//         if ( labelToTest == null ) {\n//             return;\n//         }\n//         if ( labelToTest !== currentLabel ) {\n//             //--- on a changé de label\n//             console.log( \"NEW LABEL : \" + labelToTest );\n//             this.target.view.stop();\n//           currentLabel = labelToTest;\n//           //this._showTextes();\n//             //this._showPhotos();\n//             //this._callCustomFunction1();\n//             this._playComment();\n//             this._playAnimsOnce();\n//              //this._showVideos();\n//             //--- Si clips nommés BTN_\n//             //--- Si clips nommés SND_\n//             //...\n//             this._callCustomFunction();\n//         }\n//     }\n//     this._callCustomFunction() {\n//         //--- APPEL DE FONCTION CUSTOM\n//         //On execute la premiere déclaration de fonction trouvée:\n//         //1/ fonction xenClip.actions[currentLabel]\n//         if ( this.target.actions[ currentLabel ] != undefined ) {\n//             this.target.actions[ currentLabel ]();\n//         }\n//         //2/ la fonction definie dans le fichier \"src/\" + currentLabel (cf require)\n//         else {\n//             try {\n//                 console.log(\"src/\" + currentLabel)\n//                 require( \"src/\" + currentLabel )();\n//             } catch ( err ) {\n//             }\n//         }\n//     }\n//     this._playComment() {\n//         //--- COMMENTAIRE\n//         //--- Si commentaire du même nom (moins le _\"), on le joue\n//         var commentFounded = false;\n//         var commentId = \"S_\" + xen.config.lang + \"_\" + xen.config.moduleID + \"_\" + currentLabel.substr( 1 );\n//         for ( var i = 0; i < xen.config.ressources.length; i++ ) {\n//             if ( xen.config.ressources[ i ].id == commentId ) {\n//                 commentFounded = true;\n//                 break;\n//             }\n//         }\n//         if ( commentFounded == true ) {\n//             xen.comment.play( commentId, \"ZAP\", this._finish.bind( this, commentId ) );\n//             actions.push( {\n//                 id: commentId,\n//                 type : \"sound\"\n//             } )\n//         }\n//     }\n//     this._playAnimsOnce() {\n//         //--- Si clips de nom commencant par anim_, on les joue une fois (ou loop_<nombre de fois>).\n//        // console.log(\"this.target.view \"+this.target.view);\n//        // console.log(\"this.target.view.name \"+this.target.view.name);\n//         var anims = xen.Clip.getChildrenByName( this.target.view, \"^anim_\" );\n//         //console.log(\"anims \"+anims);\n//         //console.log(\"anims.length \"+anims.length);\n//         for ( var i = 0; i < anims.length; i++ ) {\n//             var anim = new xen.Clip( {\n//                 clip: anims[ i ]\n//             } );\n//             actionID = anim.clip.name\n//             actions.push( {\n//                 id: actionID,\n//                 type : \"anim\"\n//             } );\n//             //console.log(\"anim.totalFrames \"+anim.totalFrames);\n//             anim.play(0, anim.totalFrames, this._finish.bind( this, actionID ) );\n//         }\n//     }\n//     this._showTextes() {\n//     }\n//     this._showPhotos() {\n//     }\n//     this._showVideos() {\n//     }\n//     this._finish( actionID ) {\n//         if(actionID.type === this.mainAction ){\n//         }\n//         console.log( \"finish \" + actionID )\n//         for ( var i = 0; i < actions.length; i++ ) {\n//             if ( actions[ i ].id == actionID ) {\n//                 actions.splice( i, 1 );\n//             };\n//         };\n//         if ( actions.length == 0 ) {\n//             this._callback.apply( this.target, [ {\n//                 event: \"finished\"\n//             } ] );\n//         }\n//     }\n// };\n"]}