{"version":3,"sources":["../../../src/jx/comps/Container.js"],"names":["Container","dataObject","Object","assign","children","extendsFrom","child","view","addChild","removeChild","removeAllChildren","index","getChildAt","setChildIndex","getChildIndex","id","getChildById","bool","mouseChildren"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAIqBA,S;;;AACjB,2BAAYC,UAAZ,EAAwB;AAAA;;AAAA,yHAGdC,OAAOC,MAAP,CAAc;AAChBC,0BAAU;AADM,aAAd,EAEHH,UAFG,CAHc;AAMvB;;;;sCACS;AACN;AACA,qBAAKI,WAAL,CAAiB,WAAjB;AACH;;;qCAgBQC,K,EAAO;AACZ,uBAAO,KAAKC,IAAL,CAAUC,QAAV,CAAmBF,KAAnB,CAAP;AACH;;;wCAIWA,K,EAAO;AACf,qBAAKC,IAAL,CAAUE,WAAV,CAAsBH,KAAtB;AACH;;;gDAGmB;AAChB,qBAAKC,IAAL,CAAUG,iBAAV;AACH;;;uCAIUC,K,EAAO;AACd,qBAAKJ,IAAL,CAAUK,UAAV,CAAqBD,KAArB;AACH;;;0CACaL,K,EAAOK,K,EAAO;AACxB,qBAAKJ,IAAL,CAAUM,aAAV,CAAwBP,KAAxB,EAA+BK,KAA/B;AACH;;;0CACaL,K,EAAO;AACjB,uBAAO,KAAKC,IAAL,CAAUO,aAAV,CAAwBR,KAAxB,CAAP;AACH;;;yCAIYS,E,EAAI;AACb,qBAAKR,IAAL,CAAUS,YAAV,CAAuBD,EAAvB;AACH;;;8BA3CiBE,I,EAAM;AACpB,qBAAKV,IAAL,CAAUW,aAAV,GAA0BD,IAA1B;AACH,a;gCAImB;AAChB,uBAAO,KAAKV,IAAL,CAAUW,aAAjB;AACH;;;;;;sBAvBgBlB,S","file":"Container.js","sourcesContent":["import MixIn from \"jx/core/comps/MixIn\";\n/**\n* Visual container which can contains others VisualComponents.\n*/\nexport default class Container extends MixIn {\n    constructor(dataObject) {\n        //dataObject.type = \"Container\";\n        //return VisualComponentCJS;\n        super(Object.assign({\n            children: []\n        }, dataObject));\n    }\n    _create() {\n        super._create();\n        this.extendsFrom(\"Container\");\n    }\n    /**\n    * @param {boolean} bool\n    */\n    set mouseChildren(bool) {\n        this.view.mouseChildren = bool;\n    }\n    /**\n    * @return {boolean}\n    */\n    get mouseChildren() {\n        return this.view.mouseChildren;\n    }\n    /**\n    * @param {VisualComponent} child\n    */\n    addChild(child) {\n        return this.view.addChild(child);\n    }\n    /**\n    * @param {VisualComponent} child\n    */\n    removeChild(child) {\n        this.view.removeChild(child);\n    }\n    /**\n    */\n    removeAllChildren() {\n        this.view.removeAllChildren();\n    }\n    /**\n    * @param {int} index\n    */\n    getChildAt(index) {\n        this.view.getChildAt(index);\n    }\n    setChildIndex(child, index) {\n        this.view.setChildIndex(child, index);\n    }\n    getChildIndex(child) {\n        return this.view.getChildIndex(child);\n    }\n    /**\n    * @param {string} id\n    */\n    getChildById(id) {\n        this.view.getChildById(id);\n    }\n}\n"]}