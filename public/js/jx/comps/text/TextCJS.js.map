{"version":3,"sources":["../../../../src/jx/comps/text/TextCJS.js"],"names":["TextCJS","dataObject","Object","assign","text","maxWidth","style","render","_style","fontFamily","fontSize","fontWeight","fontStyle","color","textAlign","borderColor","borderStyle","view","x","y","anchorX","regX","anchorY","regY","rotation","resourceID","resource","jx","db","findOne","id","data","bounds","width","lineWidth","height","lineHeight","undefined","scaleX","visible","createjs","Text","_offsetAlign","_ready","styleObject","tools","instanceType","styleResource","bold","italic","font","indexOf","value","console","warn","getBounds"],"mappings":"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","file":"TextCJS.js","sourcesContent":["import VisualComponentCJS from \"jx/comps/visualcomponent/VisualComponentCJS\";\nexport default class TextCJS extends VisualComponentCJS {\n    constructor(dataObject) {\n        super(Object.assign({\n            text: \" \",\n            maxWidth: null,\n            style: null\n        }, dataObject));\n        this.render = \"CJS\";\n    }\n    _create() {\n        super._create();\n        if (this.dataObject.text == \"\")\n            this.dataObject.text = \" \"; // Warning: a space is needed here for default value, else getBounds == null and make initialisation error if no text provided to Text constructor.\n        this._style = {\n            fontFamily: \"Arial\",\n            fontSize: 12,\n            fontWeight: \"normal\",\n            fontStyle: \"normal\",\n            color: \"#000000\",\n            textAlign: \"left\",\n            borderColor: \"#000000\",\n            borderStyle: null\n        };\n        if (this.dataObject.view) {\n            this.view = this.dataObject.view;\n            this.dataObject.x = this.view.x;\n            this.dataObject.y = this.view.y;\n            this.dataObject.anchorX = this.view.regX;\n            this.dataObject.anchorY = this.view.regY;\n            this.dataObject.rotation = this.view.rotation;\n            //--- set text\n            if (this.dataObject.resourceID != null) {\n                var resource = this.jx.db.findOne({ id: this.dataObject.resourceID });\n                this.text = resource.data;\n            }\n            else if (this.dataObject.text) {\n                this.text = this.dataObject.text;\n            }\n            var bounds = { x: this.view.x, y: this.view.y, width: this.view.lineWidth, height: this.view.lineHeight };\n            if (this.dataObject.width == undefined)\n                this.dataObject.width = bounds.width * this.view.scaleX;\n            if (this.dataObject.height == undefined)\n                this.dataObject.height = bounds.height * this.view.scaleX;\n            this.dataObject.visible = this.dataObject.visible == undefined ? this.view.visible : this.dataObject.visible;\n        }\n        else {\n            this.view = new createjs.Text();\n            //--- set text\n            if (this.dataObject.resourceID != null) {\n                var resource = this.jx.db.findOne({ id: this.dataObject.resourceID });\n                this.text = resource.data;\n            }\n            else if (this.dataObject.text) {\n                this.text = this.dataObject.text;\n            }\n        }\n    }\n    _initSync() {\n        super._initSync();\n        this._offsetAlign = 0;\n        this.style = this.dataObject.style || this._style;\n        this._ready = true;\n    }\n    get style() {\n        return Object.assign({}, this._style);\n    }\n    set style(styleObject) {\n        //--- if string id is provided rather than object, we get resource of this id.\n        if (this.jx.tools.instanceType(styleObject) == \"string\") {\n            var styleResource = this.jx.db.findOne({ \"id\": styleObject });\n            if (styleResource) {\n                styleObject = styleResource.data;\n            }\n        }\n        //--- we merge styleObject in actual style\n        this._style = Object.assign(this._style, styleObject);\n        //--- Allow both writing for bold and italic\n        if (styleObject.bold != undefined)\n            this._style.fontWeight = styleObject.bold ? \"bold\" : \"normal\";\n        if (styleObject.italic != undefined)\n            this._style.fontStyle = styleObject.italic ? \"italic\" : \"normal\";\n        //--- refresh textfield\n        this.view.font = this._style.fontStyle + \" \" + this._style.fontWeight + \" \" + this._style.fontSize + \"px \" + this._style.fontFamily;\n        this.view.color = this._style.color;\n        this._style.textAlign = ([\"left\", \"center\", \"right\"].indexOf(this._style.textAlign) == -1) ? \"left\" : this._style.textAlign;\n        this.view.textAlign = this._style.textAlign;\n        this.x = this.view.x; // needed for position depends of align.\n    }\n    set text(value) {\n        this.view.text = value;\n        this.style = this._style; // refresh style\n    }\n    get text() {\n        return this.view.text;\n    }\n    /** @type {number} */\n    set x(value) {\n        //--- set real x depends of align to correspond to dom style (when centered, x and y anchor are to center of text rather to top-left.\n        switch (this._style.textAlign) {\n            case \"left\":\n                this.view.x = value;\n                break;\n            case \"center\":\n                this.view.x = value + this.width / 2;\n                break;\n            case \"right\":\n                this.view.x = value + this.width;\n                break;\n            default:\n                console.warn(\"Style align type\", this._style.textAlign, \"not accepted for CJS Text\");\n                this.view.x = value;\n        }\n    }\n    /** @type {number} */\n    get x() {\n        // get real x depends of align to correspond to dom style.\n        switch (this._style.textAlign) {\n            case \"left\":\n                return this.view.x;\n                break;\n            case \"center\":\n                return this.view.x - this.width / 2;\n                break;\n            case \"right\":\n                return this.view.x - this.width;\n                break;\n            default:\n                console.warn(\"Style align type\", this._style.textAlign, \"not accepted for CJS Text\");\n                return this.view.x;\n        }\n    }\n    set width(value) {\n        this.view.lineWidth = value;\n    }\n    get width() {\n        return (this.view.getBounds() === null ? { x: 0, y: 0, width: 0, height: 0 } : this.view.getBounds().width);\n    }\n    set height(value) {\n        //this.view.lineHeight = value\n    }\n    get height() {\n        return (this.view.getBounds() === null ? { x: 0, y: 0, width: 0, height: 0 } : this.view.getBounds().height);\n    }\n}\n"]}