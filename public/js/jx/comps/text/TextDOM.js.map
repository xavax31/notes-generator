{"version":3,"sources":["../../../../src/jx/comps/text/TextDOM.js"],"names":["TextDOM","dataObject","Object","assign","text","style","_containerBounds","_style","fontFamily","fontSize","fontWeight","fontStyle","color","textAlign","alignV","borderColor","borderStyle","overflow","view","$","css","textDiv","find","resourceID","resource","jx","db","findOne","id","data","_ready","target","x","y","width","height","alignH","auto","arguments","length","fitIn","targetCoord","tools","obj","filter","styleObject","instanceType","styleResource","bold","undefined","italic","console","log","value","html"],"mappings":"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","file":"TextDOM.js","sourcesContent":["import VisualComponentDOM from \"jx/comps/visualcomponent/VisualComponentDOM\";\nexport default class TextDOM extends VisualComponentDOM {\n    constructor(dataObject) {\n        super(Object.assign({\n            text: \"\",\n            style: null\n        }, dataObject));\n    }\n    _create() {\n        super._create();\n        this._containerBounds = null;\n        this._style = {\n            fontFamily: \"Arial\",\n            fontSize: 12,\n            fontWeight: \"normal\",\n            fontStyle: \"normal\",\n            color: \"#000000\",\n            textAlign: \"left\",\n            alignV: \"top\",\n            borderColor: \"#000000\",\n            borderStyle: null,\n            overflow: \"visible\"\n        };\n        this.view = $(\"<div id='hold'><div id='text'></div></div>\");\n        // this.view=$(\"<div id='hold'><div id='text' contenteditable></div></div>\");\n        this.view.css(\"position\", \"absolute\");\n        var textDiv = this.view.find(\"#text\");\n        textDiv.css(\"position\", \"relative\");\n        textDiv.css(\"word-wrap\", \"normal\");\n        textDiv.css(\"min-width\", \"1em\");\n        textDiv.css(\"min-height\", \"1em\");\n        this.style = this.dataObject.style || this._style;\n        if (this.dataObject.resourceID != null) {\n            var resource = this.jx.db.findOne({ id: this.dataObject.resourceID });\n            this.text = resource.data;\n        }\n        else if (this.dataObject.text) {\n            this.text = this.dataObject.text;\n        }\n        this._ready = true;\n    }\n    _initSync() {\n        super._initSync();\n        this._ready = true;\n    }\n    /** */\n    fitIn({ target = null, x = 0, y = 0, width = 0, height = 0, alignH = \"left\", alignV = \"top\", auto = false } = {}) {\n        if (arguments.length == 0) {\n            if (this._containerBounds) {\n                this.fitIn(this._containerBounds);\n            }\n            return;\n        }\n        if (target) {\n            var targetCoord = this.jx.tools.obj.filter(target, { x, y, width, height });\n            x = targetCoord.x;\n            y = targetCoord.y;\n            width = targetCoord.width;\n            height = targetCoord.height;\n        }\n        if (auto) {\n            this._containerBounds = { x, y, width, height, alignH, alignV, auto };\n        }\n        ;\n        this.width = width;\n        //this.height = height;\n        switch (alignH) {\n            case \"left\":\n                this.x = x;\n                break;\n            case \"center\":\n                this.x = x + width / 2 - this.width / 2;\n                break;\n            case \"right\":\n                this.x = x + width - this.width;\n                break;\n        }\n        switch (alignV) {\n            case \"top\":\n                this.y = y;\n                break;\n            case \"middle\":\n                this.y = y + height / 2 - this.height / 2;\n                break;\n            case \"bottom\":\n                this.y = y + height - this.height;\n                break;\n        }\n    }\n    set style(styleObject) {\n        //--- if string id is provided rather than object, we get resource of this id.\n        if (this.jx.tools.instanceType(styleObject) == \"string\") {\n            var styleResource = this.jx.db.findOne({ \"id\": styleObject });\n            if (styleResource) {\n                styleObject = styleResource.data;\n            }\n        }\n        //--- we merge styleObject in actual style\n        this._style = Object.assign(this._style, styleObject);\n        //--- Allow both writing for bold and italic\n        if (styleObject.bold != undefined)\n            this._style.fontWeight = styleObject.bold ? \"bold\" : \"normal\";\n        if (styleObject.italic != undefined)\n            this._style.fontStyle = styleObject.italic ? \"italic\" : \"normal\";\n        //--- refresh textfield\n        var textDiv = this.view.find(\"#text\");\n        textDiv.css(\"pointer-events\", \"none\");\n        // textDiv.css(\"min-width\", \"1em\");\t\t\n        // textDiv.css(\"min-height\", \"1em\");\t\t\n        this.view.css(\"font-family\", this._style.fontFamily);\n        this.view.css(\"font-size\", this._style.fontSize + \"px\");\n        this.view.css(\"text-align\", this._style.textAlign);\n        //--- deprecated, only use by mini-quiz and derived. Use fiTin instead.\n        if (this._style.alignV == \"top\") {\n            textDiv.css(\"top\", \"0px\");\n        }\n        else if (this._style.alignV == \"center\") {\n            console.log(this._style);\n            console.log(textDiv.height());\n            textDiv.css(\"top\", (this.height / 2 - textDiv.height() / 2) + \"px\");\n        }\n        else if (this._style.alignV == \"bottom\") {\n            textDiv.css(\"top\", (this.height - textDiv.height()) + \"px\");\n        }\n        ;\n        this.view.css(\"font-weight\", this._style.fontWeight);\n        this.view.css(\"font-style\", this._style.fontStyle);\n        this.view.css(\"color\", this._style.color);\n        this.view.css(\"border-style\", this._style.borderStyle);\n        this.view.css(\"border-color\", this._style.borderColor);\n        this.view.css(\"overflow\", this._style.overflow);\n        if (this._containerBounds)\n            this.fitIn(this._containerBounds);\n    }\n    set width(value) {\n        this.view.width(value);\n    }\n    get width() {\n        return this.view.width();\n    }\n    set height(value) {\n        this.view.height(value);\n    }\n    get height() {\n        return this.view.height();\n    }\n    set text(value) {\n        this.view.find(\"#text\").html(value);\n        this.style = this._style;\n    }\n    get text() {\n        return this.view.find(\"#text\").html();\n    }\n}\n"]}