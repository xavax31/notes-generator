{"version":3,"sources":["../../../../src/jx/comps/imagesequence/ImageSequenceCJS.js"],"names":["ImageSequenceCJS","dataObject","Object","assign","framerate","loops","autoStart","addEventDispatcher","_createView","_ready","_frame","play","resourceID","imageSequenceResource","jx","db","findOne","id","view","createjs","Bitmap","data","params","cancel","onfinished","add","ticker","Ticker","addEventListener","_tick","bind","removeEventListener","dispatch","target","removeAll","gotoParams","frame","image","bypass","_framerateRatio","length","stop","_framerate","value","regX","width","_anchorX","regY","height","_anchorY","rotation","mod","extendsFrom","mixin","_initialise"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QACqBA,gB;;;AACjB,kCAAYC,UAAZ,EAAwB;AAAA;;AAAA,uIACdC,OAAOC,MAAP,CAAc;AAChBC,2BAAW,EADK;AAEhBC,uBAAO,CAAC,CAFQ;AAGhBC,2BAAW;AAHK,aAAd,EAIHL,UAJG,CADc;AAMvB;;;;sCAMS;AACN;AACA,qBAAKM,kBAAL,CAAwB,YAAxB;AACA,qBAAKC,WAAL;AACA,qBAAKC,MAAL,GAAc,IAAd;AACA,qBAAKL,SAAL,GAAiB,KAAKH,UAAL,CAAgBG,SAAjC;AACA,qBAAKC,KAAL,GAAa,KAAKJ,UAAL,CAAgBI,KAA7B;AACA,qBAAKK,MAAL,GAAc,CAAd;AACA,oBAAI,KAAKT,UAAL,CAAgBK,SAApB,EAA+B;AAC3B,yBAAKK,IAAL,CAAU,EAAV;AACH;AACJ;;;0CACa;AACV,oBAAI,KAAKV,UAAL,CAAgBW,UAAhB,IAA8B,IAAlC,EAAwC;AACpC,yBAAKC,qBAAL,GAA6B,KAAKC,EAAL,CAAQC,EAAR,CAAWC,OAAX,CAAmB,EAAEC,IAAI,KAAKhB,UAAL,CAAgBW,UAAtB,EAAnB,CAA7B;AACA,yBAAKM,IAAL,GAAY,IAAIC,SAASC,MAAb,CAAoB,KAAKP,qBAAL,CAA2BQ,IAA3B,CAAgC,CAAhC,EAAmCA,IAAvD,CAAZ;AACH,iBAHD,MAIK;AACD,yBAAKH,IAAL,GAAY,IAAIC,SAASC,MAAb,CAAoBnB,WAAWoB,IAA/B,CAAZ;AACH;AACJ;;;mCAQiB;AAAA,oBAAbC,MAAa,yDAAJ,EAAI;;AACd,qBAAKC,MAAL;AACA,qBAAKC,UAAL,CAAgBC,GAAhB,CAAoBH,OAAOE,UAAP,IAAsB,eAAO,CAAG,CAApD;AACA,qBAAKE,MAAL,GAAcP,SAASQ,MAAT,CAAgBC,gBAAhB,CAAiC,MAAjC,EAAyC,KAAKC,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAzC,CAAd;AACH;;;mCACM;AACHX,yBAASQ,MAAT,CAAgBI,mBAAhB,CAAoC,MAApC,EAA4C,KAAKL,MAAjD;AACA,qBAAKF,UAAL,CAAgBQ,QAAhB,CAAyB,EAAEC,QAAQ,IAAV,EAAzB;AACA,qBAAKT,UAAL,CAAgBU,SAAhB;AACH;;;qCACQ;AACLf,yBAASQ,MAAT,CAAgBI,mBAAhB,CAAoC,MAApC,EAA4C,KAAKL,MAAjD;AACA,qBAAKF,UAAL,CAAgBU,SAAhB;AACH;;;iCACIC,U,EAAY;AACb,qBAAKZ,MAAL;AACA,qBAAKb,MAAL,GAAcyB,WAAWC,KAAzB;AACA,qBAAKlB,IAAL,CAAUmB,KAAV,GAAkB,KAAKxB,qBAAL,CAA2BQ,IAA3B,CAAgC,KAAKX,MAArC,EAA6CW,IAA/D;AACH;;;oCASO;AACJ,qBAAKiB,MAAL,GAAe,KAAKA,MAAL,GAAc,CAAd,GAAkB,KAAKC,eAAxB,GAA2C,KAAKD,MAAL,GAAc,CAAzD,GAA6D,CAA3E;AACA,oBAAI,KAAKA,MAAL,IAAe,CAAnB,EAAsB;AAClB;AACH;AACD;AACA,qBAAKpB,IAAL,CAAUmB,KAAV,GAAkB,KAAKxB,qBAAL,CAA2BQ,IAA3B,CAAgC,KAAKX,MAArC,EAA6CW,IAA/D;AACA,oBAAI,KAAKX,MAAL,IAAe,KAAKG,qBAAL,CAA2BQ,IAA3B,CAAgCmB,MAAhC,GAAyC,CAA5D,EAA+D;AAC3D,wBAAI,KAAKnC,KAAL,IAAc,CAAlB,EAAqB;AACjB,6BAAKoC,IAAL;AACH,qBAFD,MAGK;AACD,6BAAK/B,MAAL,GAAc,CAAd;AACH;AACJ;AACD,qBAAKA,MAAL;AACH;;;gCAlDe;AACZ,uBAAO,KAAKgC,UAAZ;AACH,a;8BACaC,K,EAAO;AACjB,qBAAKD,UAAL,GAAkBC,KAAlB;AACA,qBAAKJ,eAAL,GAAuBpB,SAASQ,MAAT,CAAgBvB,SAAhB,GAA4B,KAAKsC,UAAxD;AACH;;;8BAoBYC,K,EAAO;AAChB,qBAAKzB,IAAL,CAAU0B,IAAV,GAAiB,KAAK1B,IAAL,CAAUmB,KAAV,CAAgBQ,KAAhB,GAAwB,KAAKC,QAA9C;AACA,qBAAK5B,IAAL,CAAU6B,IAAV,GAAiB,KAAK7B,IAAL,CAAUmB,KAAV,CAAgBW,MAAhB,GAAyB,KAAKC,QAA/C;AACA,qBAAK/B,IAAL,CAAUgC,QAAV,GAAqBP,KAArB;AACH,a;gCACc;AACX,uBAAO,KAAKzB,IAAL,CAAUgC,QAAjB;AACH;;;0CA3DoBC,G,EAAK;AACtBA,oBAAIC,WAAJ,CAAgB,iBAAhB;AACAD,oBAAIE,KAAJ,CAAU,CAAC,aAAD,EAAgB,aAAhB,EAA+B,MAA/B,EAAuC,MAAvC,EAA+C,OAA/C,CAAV,EAAmErD,gBAAnE,EAAqF,eAArF;AACAmD,oBAAIG,WAAJ;AACH;;;;;;sBAZgBtD,gB","file":"ImageSequenceCJS.js","sourcesContent":["import VisualComponentCJS from \"jx/comps/visualcomponent/VisualComponentCJS\";\nexport default class ImageSequenceCJS extends VisualComponentCJS {\n    constructor(dataObject) {\n        super(Object.assign({\n            framerate: 12,\n            loops: -1,\n            autoStart: true\n        }, dataObject));\n    }\n    static initialiseMod(mod) {\n        mod.extendsFrom(\"VisualComponent\");\n        mod.mixin([\"_initialise\", \"_createView\", \"play\", \"stop\", \"_tick\"], ImageSequenceCJS, \"ImageSequence\");\n        mod._initialise();\n    }\n    _create() {\n        super._create();\n        this.addEventDispatcher(\"onfinished\");\n        this._createView();\n        this._ready = true;\n        this.framerate = this.dataObject.framerate;\n        this.loops = this.dataObject.loops;\n        this._frame = 0;\n        if (this.dataObject.autoStart) {\n            this.play({});\n        }\n    }\n    _createView() {\n        if (this.dataObject.resourceID != null) {\n            this.imageSequenceResource = this.jx.db.findOne({ id: this.dataObject.resourceID });\n            this.view = new createjs.Bitmap(this.imageSequenceResource.data[0].data);\n        }\n        else {\n            this.view = new createjs.Bitmap(dataObject.data);\n        }\n    }\n    get framerate() {\n        return this._framerate;\n    }\n    set framerate(value) {\n        this._framerate = value;\n        this._framerateRatio = createjs.Ticker.framerate / this._framerate;\n    }\n    play(params = {}) {\n        this.cancel();\n        this.onfinished.add(params.onfinished || (evt => { }));\n        this.ticker = createjs.Ticker.addEventListener(\"tick\", this._tick.bind(this));\n    }\n    stop() {\n        createjs.Ticker.removeEventListener(\"tick\", this.ticker);\n        this.onfinished.dispatch({ target: this });\n        this.onfinished.removeAll();\n    }\n    cancel() {\n        createjs.Ticker.removeEventListener(\"tick\", this.ticker);\n        this.onfinished.removeAll();\n    }\n    goto(gotoParams) {\n        this.cancel();\n        this._frame = gotoParams.frame;\n        this.view.image = this.imageSequenceResource.data[this._frame].data;\n    }\n    set rotation(value) {\n        this.view.regX = this.view.image.width * this._anchorX;\n        this.view.regY = this.view.image.height * this._anchorY;\n        this.view.rotation = value;\n    }\n    get rotation() {\n        return this.view.rotation;\n    }\n    _tick() {\n        this.bypass = (this.bypass + 1 < this._framerateRatio) ? this.bypass + 1 : 0;\n        if (this.bypass != 0) {\n            return;\n        }\n        ;\n        this.view.image = this.imageSequenceResource.data[this._frame].data;\n        if (this._frame >= this.imageSequenceResource.data.length - 1) {\n            if (this.loops == 0) {\n                this.stop();\n            }\n            else {\n                this._frame = 0;\n            }\n        }\n        this._frame++;\n    }\n}\n"]}