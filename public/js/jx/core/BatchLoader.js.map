{"version":3,"sources":["../../../src/jx/core/BatchLoader.js"],"names":["typeToClasses","text","json","image","imagesequence","flashtml","Flashtml","spritesheet","BatchLoader","loadedResourcesArray","onResourcesLoaded","jx","_loaders","loadedResources","failedResources","length","i","resource","originalType","type","toLowerCase","unshift","$","proxy","_onResourceLoaded","config","system","audio","isWebAudioSupported","push","db","findOne","id","data","evt","srcClass","replace","RegExp","itemClass","getClass","comp","loaderClass","getLoaderClass","onloaded","debug","error","success","kill","load","loader","target","index","indexOf","console","splice","setTimeout","log"],"mappings":"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","file":"BatchLoader.js","sourcesContent":["import ClassLoader from \"jx/core/loaders/ClassLoader\";\nlet typeToClasses = {\n    text: \"TextLoader\",\n    json: \"JSONLoader\",\n    image: \"ImageLoader\",\n    imagesequence: \"ImageSequenceLoader\",\n    flashtml: \"FlashtmlLoader\",\n    Flashtml: \"FlashtmlLoader\",\n    spritesheet: \"SpriteSheetLoader\"\n};\nexport default class BatchLoader {\n    constructor(loadedResourcesArray, onResourcesLoaded, jx) {\n        this.jx = jx;\n        this.onResourcesLoaded = onResourcesLoaded;\n        this._loaders = [];\n        this.loadedResources = [];\n        this.failedResources = [];\n        var length = loadedResourcesArray.length;\n        for (var i = 0; i < length; i++) {\n            //console.log(resource)\n            var resource = loadedResourcesArray[i];\n            let originalType = resource.type;\n            resource.type = resource.type.toLowerCase();\n            switch (resource.type) {\n                case \"video\":\n                    // not implemented or not needed\n                    break;\n                case \"class\":\n                    //load classes first\n                    this._loaders.unshift(new ClassLoader(resource, $.proxy(this._onResourceLoaded, this), this.jx));\n                    break;\n                case \"sound\":\n                    if (!this.jx.config.system.audio.isWebAudioSupported) {\n                        this._loaders.push(new (this.jx.db.findOne({ id: \"SoundLoaderMediaElement\" }).data)(resource, evt => this._onResourceLoaded(evt), this.jx));\n                    }\n                    else {\n                        this._loaders.push(new (this.jx.db.findOne({ id: \"SoundLoader\" }).data)(resource, evt => this._onResourceLoaded(evt), this.jx));\n                    }\n                    break;\n                default:\n                    if (typeToClasses[resource.type]) {\n                        this._loaders.push(new (this.jx.db.findOne({ id: typeToClasses[resource.type] }).data)(resource, evt => this._onResourceLoaded(evt), this.jx));\n                    }\n                    else {\n                        resource.type = originalType;\n                        let srcClass = originalType.replace(new RegExp(/\\./g), \"/\");\n                        let itemClass = this.jx.db.getClass(srcClass);\n                        if (itemClass) {\n                            this.jx.comp[originalType] = itemClass;\n                            let loaderClass = itemClass.getLoaderClass();\n                            this._loaders.push(new (loaderClass)({\n                                resource: resource,\n                                onloaded: evt => this._onResourceLoaded(evt),\n                                jx: this.jx\n                            }));\n                        }\n                        else {\n                            this.jx.debug.error(\"no loader defined for type \", itemClass);\n                            this._onResourceLoaded({ resource, success: false });\n                        }\n                    }\n            }\n        }\n    }\n    kill() {\n        if (!this.jx)\n            return;\n        for (var i = 0; i < this._loaders.length; i++) {\n            this._loaders[i].kill();\n        }\n        this._loaders = null;\n        this.loadedResources = null;\n        this.failedResources = null;\n        this.jx = null;\n    }\n    load() {\n        if (this._loaders.length == 0) {\n            this.onResourcesLoaded(this);\n        }\n        else {\n            for (var i = 0; i < this._loaders.length; i++) {\n                this._loaders[i].load();\n            }\n        }\n    }\n    _onResourceLoaded(evt) {\n        let loader = evt.target;\n        let resource = evt.resource;\n        let success = evt.success;\n        //-- remove loader from loaders list.\n        let index = this._loaders.indexOf(loader);\n        if (index == -1) {\n            console.error(\"loader not referenced in BatchLoader\", loader, resource);\n        }\n        this._loaders.splice(index, 1);\n        if (success) {\n            //this.jx.log(\"loaded\", loader.resource)\n            this.loadedResources.push(resource);\n        }\n        else {\n            //console.warn(\"failed\", resource)\n            this.failedResources.push(resource);\n        }\n        loader.kill();\n        //-- when all loaders of batchloader has finished\n        if (this._loaders.length == 0) {\n            setTimeout(() => { this.onResourcesLoaded(this); }, 0);\n        }\n        else {\n            this.jx.debug.log(\"loaders\", this._loaders); // useful for certain load error to see which resources are not yet loaded\n        }\n    }\n}\n"]}