{"version":3,"sources":["../../../../src/jx/core/utils/List.js"],"names":["_list","_p","_position","_loopMode","List","p","_init","loopMode","undefined","fill","shuffle","start","end","sourceArray","curve","num","Math","abs","i","length","a","b","lp","push","accidents","noise_en_last","randomValue","value","noise","noiseAmplitude","clipping","new_value","last","randomiseArray","splice","result","next","current","console","log","parent","xScale","yScale","key","lineColor","lineThickness","markerHeight","oriX","oriY","arr","arr_length","container","createjs","Shape","graphics","setStrokeStyle","beginStroke","moveTo","xValue","yValue","lineTo","addChild","view","element","position","myList","lList","slice","randomList","randomPos","boucleLength","min","max","randomNum","floor","random"],"mappings":"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","file":"List.js","sourcesContent":["let _list; //Array;\nlet _p = null;\nlet _position = -1; //;\nlet _loopMode = \"loop\"; //:String;\nclass List {\n    constructor(p) {\n        _p = p;\n        this._init();\n    }\n    _init() {\n        _list = [];\n        _position = -1;\n        //console.log(_p.start + \" \" + _p.end+ \" \" + _p.loopMode);\n        _loopMode = (_p.loopMode == undefined) ? \"loop\" : _p.loopMode;\n        //if (_p.start != undefined && _p.end != undefined) {\n        this.fill(_p);\n        //}\n        if (_p.shuffle == true) {\n            this.shuffle();\n        }\n    }\n    fill(p) {\n        //_global.xListeObj(p);\n        _p = p;\n        //console.log(\"p.start + p.end = \"+p.start +\" \"+ p.end+\" \"+Number(p.start+p.end));\n        if ((_p.start == undefined || _p.end == undefined) && (_p.sourceArray == undefined)) {\n            return false;\n        }\n        _p.curve = (_p.curve == undefined) ? \"linear\" : _p.curve;\n        _p.num = (_p.num == undefined) ? Math.abs(_p.end - _p.start) : _p.num - 1;\n        _list = [];\n        if (_p.sourceArray != undefined) {\n            for (var i = 0; i < _p.sourceArray.length; i++) {\n                _list[i] = _p.sourceArray[i];\n            }\n        }\n        else {\n            var a = (_p.end - _p.start) / (_p.num);\n            var b = _p.start;\n            if (_p.curve == \"linear\") {\n                for (var lp = 0; lp <= (_p.num); lp++) {\n                    _list.push(a * lp + b);\n                }\n            }\n            else if (_p.curve == \"exp\") {\n                for (var lp = 0; lp <= (_p.num); lp++) {\n                    _list.push(a / (_p.num) * lp * lp + b);\n                }\n            }\n        }\n        if (_p.accidents != undefined && _p.noise_en_last != false) {\n            for (var i = 0; i < _p.accidents.length; i++) {\n                _list[List.randomValue(_p.accidents[i].start, _p.accidents[i].end)] = _p.accidents[i].value;\n            }\n        }\n        if (_p.noise != undefined && _p.noise != false) {\n            this.noise();\n        }\n        if (_p.accidents != undefined && _p.noise_en_last == false) {\n            for (var i = 0; i < _p.accidents.length; i++) {\n                _list[List.randomValue(_p.accidents[i].start, _p.accidents[i].end)] = _p.accidents[i].value;\n            }\n        }\n        return true;\n    }\n    noise() {\n        if (_p.noiseAmplitude == undefined) {\n            _p.noiseAmplitude = 0.1;\n        }\n        _p.clipping = _p.clipping || false;\n        //console.log(\"_p.noiseAmplitude : \" + _p.noiseAmplitude);\n        var new_value;\n        for (var i = 0; i < _list.length; i++) {\n            if (typeof (_list[i]) == \"number\") {\n                new_value = _list[i] + (List.randomValue(-1000, 1000) / 1000) * _p.noiseAmplitude;\n                if (_p.clipping) {\n                    if (new_value < _p.start) {\n                        new_value = _p.start;\n                    }\n                    if (new_value > _p.end) {\n                        new_value = _p.end;\n                    }\n                }\n                _list[i] = new_value;\n            }\n        }\n    }\n    next() {\n        _position++;\n        if (_position >= _list.length) {\n            switch (_loopMode) {\n                case \"once\":\n                    return \"ended\";\n                    break;\n                case \"loop\":\n                    _position = 0;\n                    break;\n                case \"shuffle\":\n                    this.shuffle();\n                    _position = 0;\n                    break;\n            }\n        }\n        return _list[_position];\n    }\n    nextLoop() {\n        _position = _list.length;\n        if (_position >= _list.length) {\n            switch (_loopMode) {\n                case \"once\":\n                    return \"ended\";\n                    break;\n                case \"loop\":\n                    _position = 0;\n                    break;\n                case \"shuffle\":\n                    this.shuffle();\n                    _position = 0;\n                    break;\n            }\n        }\n        return _list[_position];\n    }\n    shuffle() {\n        var last = _list[_position];\n        _list = List.randomiseArray(_list);\n        if (_list[0] == last) {\n            this.shuffle();\n        }\n        //console.log(\"shuffle\" +_list);\n    }\n    removeCurrent() {\n        _list.splice(_position, 1);\n        _position--;\n    }\n    removeItems(p) {\n        if (typeof (p) == \"number\") {\n            for (var i = 0; i < p; i++) {\n                _list.splice(List.randomValue(0, _list.length - 1), 1);\n            }\n        }\n        _position = 0;\n    }\n    static randomiseArray(myList) {\n        var lList = myList.slice();\n        var randomList = [];\n        var randomPos;\n        var boucleLength = lList.length;\n        for (var i = 0; i < boucleLength; i++) {\n            randomPos = List.randomValue(0, lList.length - 1);\n            randomList.push(lList[randomPos]);\n            lList.splice(randomPos, 1);\n        }\n        return randomList;\n    }\n    static randomValue(min, max) {\n        var randomNum = Math.floor(Math.random() * (max - min + 1)) + min;\n        return randomNum;\n    }\n    simulate({ start = 0, end }) {\n        var result = [];\n        for (var i = 0; i < end; i++) {\n            this.next();\n            if (i >= start) {\n                result.push(this.current);\n            }\n            ;\n        }\n        ;\n        return result;\n    }\n    info() {\n        console.log(\"info : \");\n        for (var i = 0; i < _list.length; i++) {\n            console.log(i + \" : \", _list[i]);\n        }\n        //console.log (\"liste : \" + _list);\n    }\n    infoCurve({ parent, xScale = 20, yScale = 10, key = null, lineColor = \"#F00\", lineThickness = 2, markerHeight = 10, oriX = 0, oriY = 384, }) {\n        var arr = _list;\n        var arr_length = arr.length;\n        var container = new createjs.Shape();\n        container.graphics.setStrokeStyle(lineThickness, \"round\").beginStroke(lineColor);\n        container.graphics.moveTo(oriX, oriY);\n        var xValue;\n        var yValue;\n        for (var i = 0; i < arr.length; i++) {\n            xValue = i;\n            if (key == null) {\n                yValue = arr[i];\n            }\n            else if (typeof key == \"string\") {\n                yValue = arr[i][key];\n            }\n            else if (typeof key == \"function\") {\n                yValue = key(arr[i]);\n            }\n            console.log(xValue, arr[i], \" value:\", yValue);\n            xValue = oriX + xValue * xScale;\n            yValue = oriY - yValue * yScale;\n            console.log(\"x:\", xValue, \" y:\", yValue);\n            if (i == 0) {\n                container.graphics.moveTo(xValue, yValue);\n            }\n            else {\n                container.graphics.lineTo(xValue, yValue);\n            }\n            container.graphics.lineTo(xValue, yValue - 10);\n            container.graphics.lineTo(xValue, yValue + 10);\n            container.graphics.lineTo(xValue, yValue);\n        }\n        parent.addChild({ view: container });\n    }\n    getPos(element) {\n        for (var i = 0; i < _list.length; i++) {\n            if (_list[i] == element) {\n                return i;\n            }\n        }\n        return false;\n    }\n    get current() {\n        return _list[_position];\n    }\n    get e() {\n        return _list;\n    }\n    set loopMode(curve) {\n        this._loopMode = curve;\n    }\n    get size() {\n        return _list.length;\n    }\n    set position(position) {\n        _position = position;\n    }\n    get position() {\n        return _position;\n    }\n}\nexport default List;\n"]}