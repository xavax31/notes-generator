{"version":3,"sources":["../../../../src/jx/core/sound/SoundPlayerMediaElement.js"],"names":["SoundPlayerMediaElement","dataObject","Object","assign","id","resourceId","loops","addEventDispatcher","_sound","_volume","_soundData","sound","_setSound","soundResource","jx","db","findOne","lang","config","undefined","data","addEventListener","_soundFinished","evt","onfinished","cancel","_finishedOnce","remove","addOnce","_tempLoops","loop","volume","setCurrentTime","play","onplaystart","dispatch","target","event","removeEventListener","console","log","stop","params","pause","onstop","_soundEndedhandler","value"],"mappings":"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","file":"SoundPlayerMediaElement.js","sourcesContent":["import Component from \"jx/core/comps/Component\";\nexport default class SoundPlayerMediaElement extends Component {\n    constructor(dataObject) {\n        super(Object.assign({\n            id: null,\n            resourceId: null,\n            loops: 0\n        }, dataObject));\n        this.addEventDispatcher(\"onfinished\", \"onplaystart\", \"onstop\"); // must be onfinished rather finished\n        this._sound = null;\n        this.loops = this.dataObject.loops;\n        this._volume = 1;\n        this._soundData = {\n            id: null,\n            sound: null\n        };\n        if (dataObject.id) {\n            this.id = dataObject.id;\n        }\n        if (dataObject.resourceId) {\n            this._setSound(dataObject.resourceId);\n        }\n        //\n        // this._soundEndedhandler = (event)=>{\n        //     this.sound.removeEventListener(\"ended\", this._soundEndedhandler);\n        //     this._soundFinished(event);\n        // };\n    }\n    _setSound(id) {\n        //console.log(\"_setSound\", id)\n        var soundResource = this.jx.db.findOne({ id: id, lang: this.jx.config.lang });\n        this._soundData.id = id;\n        if (this._soundData.id != undefined) {\n            this.sound = soundResource.data;\n            this.sound.addEventListener(\"ended\", evt => this._soundFinished(evt));\n        }\n        ;\n    }\n    set volume(value) {\n        this._volume = value;\n        if (this.sound) {\n            this.sound.volume = this._volume;\n        }\n        ;\n    }\n    get volume() {\n        return this._volume;\n    }\n    play({ id, onfinished, loops }) {\n        //alert(\"PLAY \" + id + \", \" + this._volume)\n        if (this.sound)\n            this.cancel();\n        if (this._finishedOnce) {\n            this.onfinished.remove(this._finishedOnce);\n            this._finishedOnce = null;\n        }\n        if (onfinished) {\n            this._finishedOnce = onfinished || (evt => { });\n            this.onfinished.addOnce(this._finishedOnce);\n        }\n        ;\n        this._setSound(id);\n        this.loops = loops || this.loops;\n        this._tempLoops = this.loops;\n        this.sound.loop = false;\n        this.sound.volume = this._volume;\n        this.sound.setCurrentTime(0);\n        this.sound.play();\n        this.onplaystart.dispatch({ target: this });\n    }\n    _soundFinished(event) {\n        //console.log( \"_soundFinished\", this );\n        if (this._tempLoops != 0) {\n            this.sound.removeEventListener(\"ended\", this._soundFinished);\n            this.sound.addEventListener(\"ended\", this._soundFinished);\n            this._tempLoops--;\n            this.sound.setCurrentTime(0);\n            this.sound.play();\n        }\n        else {\n            console.log(\"soundFinished \" + this._soundData.id);\n            this.stop();\n        }\n    }\n    stop(params) {\n        // console.log( \"stop sound\" );\n        if (this.sound != undefined && this.sound != null) {\n            this.sound.pause();\n        }\n        this.onstop.dispatch({ target: this });\n        this.onfinished.dispatch({ target: this });\n        if (this._finishedOnce) {\n            this.onfinished.remove(this._finishedOnce);\n            this._finishedOnce = null;\n        }\n    }\n    /* __\n     * Stop le son sans executer les actions de fin\n    */\n    cancel() {\n        console.log(\"cancel\", this.sound);\n        if (this.sound != null) {\n            this.sound.pause();\n            this.sound.removeEventListener(\"ended\", this._soundEndedhandler);\n            this.sound = null;\n            this.onstop.dispatch({ target: this });\n        }\n        if (this._finishedOnce) {\n            this.onfinished.remove(this._finishedOnce);\n            this._finishedOnce = null;\n        }\n    }\n}\n"]}