{"version":3,"sources":["../../../../src/jx/core/sound/SoundManager.js"],"names":["SoundManager","jx","_players","groups","none","music","voice","init","console","info","slice","i","length","log","_destroyPlayer","_freezedPlayers","createPlayer","id","onplaystart","add","oldVolume","volume","onstop","undefined","loops","onfinished","soundPlayer","play","evt","params","stop","cancel","_appFreezed","playing","push","appFreeze","appUnfreeze","dataObject","Object","assign","resourceId","streaming","soundPlayerClass","config","system","audio","isWebAudioSupported","player","prop","warn","splice","kill","createjs","Sound","value"],"mappings":"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","file":"SoundManager.js","sourcesContent":["import SoundPlayer from \"jx/core/sound/SoundPlayer\";\nimport SoundPlayerMediaElement from \"jx/core/sound/SoundPlayerMediaElement\";\n/**\n * A SoundManager manage a group of players. Each Aplication has a SoundManager by default (via jx.dj).\n * It pre-define two players, 'voice' for comments and 'music' for looped background music.\n */\nexport default class SoundManager {\n    constructor({ jx }) {\n        this.jx = jx;\n        this._players = [];\n        this.groups = { none: [] };\n        /**\n         * Player configured for background music.\n         * @type {SoundPlayer}\n         */\n        this.music = null;\n        /**\n         * Player configured for comments voice.\n         * @type {SoundPlayer}\n         */\n        this.voice = null;\n        this.init();\n    }\n    kill() {\n        console.info(\"killing\", this, this._players);\n        let _players = this._players.slice();\n        for (var i = 0; i < _players.length; i++) {\n            console.log(\"Player\", _players[i]);\n            this._destroyPlayer(_players[i]);\n        }\n        //return;\n        this._players = null;\n        this._freezedPlayers = null;\n        this.music = null;\n        this.voice = null;\n        this.groups = null;\n        this.jx = null;\n        console.info(\"killed\", this);\n    }\n    init() {\n        this.createPlayer({ id: \"voice\" });\n        this.voice.onplaystart.add(() => {\n            this.music.oldVolume = this.music.volume;\n            this.music.volume = this.music.volume * 40 / 100;\n        });\n        this.voice.onstop.add(() => {\n            this.music.volume = this.music.oldVolume == undefined ? this.music.volume : this.music.oldVolume;\n        });\n        this.createPlayer({ id: \"music\" });\n        this.music.loops = -1;\n        // this.jx.setInterval(2000, evt=>{\n        //     console.log(\"SM\", this._players)\n        // })\n    }\n    /**\n     * get global volume  (Not working on Aquafadas).\n     * @type {number} value from 0 to 1.\n     */\n    get volume() {\n        return createjs.Sound.volume;\n    }\n    /**\n     * set global volume  (Not working on Aquafadas).\n     * @type {number} value from 0 to 1.\n     */\n    set volume(value) {\n        createjs.Sound.volume = value;\n    }\n    /**\n     * Play a sound.\n     * @param  {object} params.id  - id of sound resource to play.\n     * @param  {object} [params.onfinished]\n     * @return {SoundPlayer}\n     */\n    play({ id, loops = null, onfinished = evt => { } }) {\n        var soundPlayer = this.createPlayer();\n        //soundPlayer.finished.add((event)=>{finished(event);});\n        soundPlayer.play({ id, loops, onfinished: evt => {\n                this._destroyPlayer(soundPlayer);\n                onfinished(evt);\n            } });\n        return soundPlayer;\n    }\n    /**\n     * Stop all sounds (triggering onfinished event of all sounds stopped)\n     * @param  {object} params - not used actually, always null.\n     */\n    stop(params = null) {\n        console.log(\"stop\", params);\n        if (params == null) {\n            for (var i = 0; i < this._players.length; i++) {\n                if (this._players[i] != null) {\n                    this._players[i].stop();\n                }\n            }\n            ;\n        }\n        ;\n    }\n    /**\n     * Stop all sounds  without triggering onfinished events.\n     * @param  {object} params - not used actually, always null.\n     */\n    cancel(params = null) {\n        console.log(\"cancel\", params);\n        if (params == null) {\n            for (var i = 0; i < this._players.length; i++) {\n                if (this._players[i] != null) {\n                    this._players[i].cancel();\n                }\n            }\n            ;\n        }\n        ;\n    }\n    appFreeze() {\n        if (this._appFreezed)\n            return;\n        this._appFreezed = true;\n        this._freezedPlayers = this._freezedPlayers || [];\n        for (var i = 0; i < this._players.length; i++) {\n            if (this._players[i].playing) {\n                this._freezedPlayers.push(this._players[i]);\n                this._players[i].appFreeze();\n            }\n            ;\n        }\n    }\n    appUnfreeze() {\n        if (!this._appFreezed)\n            return;\n        this._appFreezed = false;\n        for (var i = 0; i < this._freezedPlayers.length; i++) {\n            this._freezedPlayers[i].appUnfreeze();\n        }\n        this._freezedPlayers.length = 0;\n    }\n    /**\n     * Create a new SoundPlayer.\n     * @param  {object} [params.id]  - id of SoundPlayer to attach to this SoundManager,\n     * if null, anonyme player is returned.\n     * @return {SoundPlayer}\n     */\n    createPlayer(dataObject = {}) {\n        dataObject = Object.assign({\n            jx: this.jx,\n            id: null,\n            loops: 0,\n            resourceId: null,\n            streaming: false\n        }, dataObject);\n        var soundPlayerClass = (dataObject.streaming || !this.jx.config.system.audio.isWebAudioSupported) ? SoundPlayerMediaElement : SoundPlayer;\n        var player;\n        if (dataObject.id == null) {\n            player = new soundPlayerClass(dataObject);\n            this._players.push(player);\n            return player;\n        }\n        else {\n            // check if player with same id already exists\n            for (var prop in this) {\n                if (dataObject.id == this[prop]) {\n                    return this[dataObject.id];\n                }\n                ;\n            }\n            if (this[dataObject.id]) {\n                console.warn(\"SoundPlayer\", dataObject.id, \"already exists\");\n            }\n            else {\n                player = new soundPlayerClass(dataObject);\n                this._players.push(player);\n                this[dataObject.id] = player;\n            }\n            return this[dataObject.id];\n        }\n    }\n    killPlayer(player) {\n        this._destroyPlayer(player);\n    }\n    _destroyPlayer(player) {\n        if (!player)\n            return;\n        // console.log(\"removePlayer\", params);\n        if (player.id && this[player.id] != undefined) {\n            delete this[player.id];\n        }\n        for (var i = 0; i < this._players.length; i++) {\n            if (this._players[i] === player) {\n                this._players.splice(i, 1);\n            }\n        }\n        player.kill();\n    }\n    /**\n     * Remove player from this SoundManager.\n     * @param  {object} params.id  - id of player to remove.\n     */\n    destroyPlayer(params) {\n        // console.log(\"removePlayer\", params);\n        if (this[params.id] != undefined) {\n            delete this[params.id];\n        }\n        else {\n            console.warn(\"SoundPlayer\", params.id, \"does not exist\");\n        }\n    }\n    createGroup(params) {\n        console.log(\"addGroup\", params);\n    }\n}\n"]}