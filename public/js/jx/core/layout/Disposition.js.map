{"version":3,"sources":["../../../../src/jx/core/layout/Disposition.js"],"names":["Disposition","jx","rows","ref","center","spacing","margin","result","rowWidth","width","totalW","i","console","log","xOffset","x","comp","target","y","length","localToLocal","interval","cols","tools","fillObject","top","left","right","bottom","targetBounds","height","finalWidth","maxWidth","maxHeight","posX","posY","clip","totalWidth","numCols","numRows","itemWidth","itemHeight","totalHeight","totalWidthMarge","oriX","totalHeightMarge","oriY","pos","row","col","ratioWidth","getGlobalBounds","clipBounds","totalWantedWidth","nextTransform","offsetX","pt","globalToLocal","comp2","localToGlobal","xc","yc","targets","xPos","totalH","yPos","alignObj","alignX","replace","alignY","ratioHeight"],"mappings":"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","file":"Disposition.js","sourcesContent":["export default class Disposition {\n    constructor(jx) {\n        this.jx = jx;\n    }\n    getPositions({ rows, ref, center = false, spacing = 0, margin = 0 }) {\n        var result = {};\n        var rowWidth = (ref.width - margin * 2 - ((rows - 1) * spacing)) / rows;\n        var totalW = 0;\n        for (var i = 0; i < rows; i++) {\n            console.log(rowWidth, ((center) ? rowWidth * i + rowWidth / 2 : rowWidth * i));\n            var xOffset = (i == 0) ? margin : margin + i * spacing;\n            result[\"row\" + i] = { x: (center) ? xOffset + rowWidth * i + rowWidth / 2 : xOffset + rowWidth * i, width: rowWidth };\n            console.log(result[\"row\" + i].x + result[\"row\" + i].width + margin);\n        }\n        console.log(margin * 2 + rows * rowWidth + (rows - 1) * spacing, ref.width);\n        return result;\n    }\n    setToPos({ comp, target }) {\n        comp.x = target.x;\n        comp.y = target.y;\n    }\n    setToPosGlobal({ comp, target }) {\n        for (var i = 0; i < comp.length; i++) {\n            target.localToLocal(0, 0, comp[i]);\n            comp[i].x = target.x;\n            comp[i].y = target.y;\n        }\n        ;\n    }\n    setToGrid({ comp, target, interval = {}, margin = {}, cols = 100000 }) {\n        var margin = this.jx.tools.fillObject({ top: 0, left: 0, right: 0, bottom: 0 }, margin);\n        var interval = this.jx.tools.fillObject({ x: 0, y: 0 }, interval);\n        var targetBounds = { x: 0, y: 0, width: target.width, height: target.height };\n        var finalWidth = 0;\n        var maxWidth = targetBounds.width;\n        var maxHeight = 0;\n        var posX = targetBounds.x + margin.left;\n        var posY = targetBounds.y + margin.top;\n        var clip;\n        var totalWidth;\n        var numCols = 0;\n        var numRows = comp.length / cols;\n        var itemWidth = (targetBounds.width - margin.left - margin.right - interval.x * (cols - 1)) / cols;\n        var itemHeight = comp[0].height * itemWidth / comp[0].width;\n        var totalHeight = margin.top + margin.bottom + numRows * (comp[0].height * itemWidth / comp[0].width) + (numRows - 1) * interval.y;\n        if (totalHeight > targetBounds.height) {\n            var itemHeight = (targetBounds.height - margin.top - margin.bottom - interval.y * (numRows - 1)) / numRows;\n            var itemWidth = (comp[0].width * itemHeight / comp[0].height);\n        }\n        var totalWidthMarge = (targetBounds.width - (margin.left + margin.right + cols * itemWidth + (cols - 1) * interval.x)) / 2;\n        var oriX = targetBounds.x + totalWidthMarge + margin.left;\n        posX = oriX;\n        var totalHeightMarge = (targetBounds.height - (margin.top + margin.bottom + numRows * itemHeight + (numRows - 1) * interval.y)) / 2;\n        var oriY = targetBounds.y + totalHeightMarge + margin.top;\n        posY = oriY;\n        var pos = { x: targetBounds.x + margin.left, y: targetBounds.y + margin.top };\n        for (var row = 0; row < numRows; row++) {\n            for (var col = 0; col < cols; col++) {\n                pos.x = col * (itemWidth + interval.x) + totalWidthMarge + margin.left;\n                pos.y = row * (itemHeight + interval.y) + totalHeightMarge + margin.top;\n                console.log(\"clip\", row * cols + col, row);\n                clip = comp[row * cols + col];\n                clip.ratioWidth = itemWidth;\n                clip.x = pos.x;\n                clip.y = pos.y;\n            }\n        }\n        // \tnumCols ++;\n        // \tclip = comp[i];\n        // \tclip.ratioWidth = itemWidth;\n        // \tvar clipBounds  = clip;\n        // \tmaxHeight = clipBounds.height>maxHeight ? clipBounds.height : maxHeight;\n        // \tvar totalWantedWidth = posX + clipBounds.width + margin.right\n        // \tif (totalWantedWidth > targetBounds.x + maxWidth) {\n        // \t\tnumCols = 1;\n        // \t\ttotalWidth = posX + margin.right - targetBounds.x;\n        // \t\tposX = oriX;\n        // \t\tposY += maxHeight + interval.y;\n        // \t}\n        // \telse{\n        // \t\ttotalWidth = totalWantedWidth - targetBounds.x;\n        // \t}\n        // \tfinalWidth = totalWidth>finalWidth ? totalWidth : finalWidth;\n        // \tclip.nextTransform = {x:posX, y:posY, width: itemWidth};\n        // \tclip.x = posX;\n        // \tclip.y = posY;\n        // \tconsole.log(clipBounds.width, clip.width)\n        // \tposX += clipBounds.width + interval.x ;\n        // \t//this.setToPosGlobal({comp:[clip], target: target})\n        // };\n    }\n    setToGridGlobal({ comp, target, interval = {}, margin = {}, cols = 100000 }) {\n        var margin = this.jx.tools.fillObject({ top: 0, left: 0, right: 0, bottom: 0 }, margin);\n        var interval = this.jx.tools.fillObject({ x: 0, y: 0 }, interval);\n        var targetBounds = this.getGlobalBounds(target);\n        var finalWidth = 0;\n        var maxWidth = targetBounds.width;\n        var maxHeight = 0;\n        var posX = targetBounds.x + margin.left;\n        var posY = targetBounds.y + margin.top;\n        var clip;\n        var totalWidth;\n        var numCols = 0;\n        //-- deduct width of items\n        var itemWidth = (targetBounds.width - margin.left - margin.right - interval.x * (cols - 1)) / cols;\n        console.log(itemWidth, margin.left, margin.right, interval.x, cols);\n        for (var i = 0; i < comp.length; i++) {\n            numCols++;\n            clip = comp[i];\n            clip.ratioWidth = itemWidth;\n            var clipBounds = this.getGlobalBounds(clip);\n            maxHeight = clipBounds.height > maxHeight ? clipBounds.height : maxHeight;\n            var totalWantedWidth = posX + clipBounds.width + interval.x + margin.right;\n            if (totalWantedWidth > targetBounds.x + maxWidth || numCols > cols) {\n                numCols = 1;\n                totalWidth = posX + margin.right - targetBounds.x;\n                posX = targetBounds.x + margin.left;\n                posY += maxHeight + interval.y;\n            }\n            else {\n                totalWidth = totalWantedWidth - targetBounds.x;\n            }\n            finalWidth = totalWidth > finalWidth ? totalWidth : finalWidth;\n            clip.nextTransform = { x: posX, y: posY, width: itemWidth };\n            console.log(clipBounds.width, clip.width);\n            posX += clipBounds.width + interval.x;\n            //this.setToPosGlobal({comp:[clip], target: target})\n        }\n        ;\n        var offsetX = (maxWidth - finalWidth) / 2;\n        for (var i = 0; i < comp.length; i++) {\n            clip = comp[i];\n            clip.nextTransform.x += offsetX;\n            var pt = target.globalToLocal(posX, clip.nextTransform.y);\n            clip.x = pt.x;\n            clip.y = pt.y;\n        }\n    }\n    setToGridGlobal2({ comp, target, interval = {}, margin = {}, cols = 100000 }) {\n        var margin = this.jx.tools.fillObject({ top: 0, left: 0, right: 0, bottom: 0 }, margin);\n        var interval = this.jx.tools.fillObject({ x: 0, y: 0 }, interval);\n        var targetBounds = this.getGlobalBounds(target);\n        var finalWidth = 0;\n        var maxWidth = targetBounds.width;\n        var maxHeight = 0;\n        var posX = targetBounds.x + margin.left;\n        var posY = targetBounds.y + margin.top;\n        var clip;\n        var totalWidth;\n        var numCols = 0;\n        for (var i = 0; i < comp.length; i++) {\n            numCols++;\n            clip = comp[i];\n            var clipBounds = this.getGlobalBounds(clip);\n            maxHeight = clipBounds.height > maxHeight ? clipBounds.height : maxHeight;\n            var totalWantedWidth = posX + clipBounds.width + interval.x + margin.right;\n            if (totalWantedWidth > targetBounds.x + maxWidth || numCols > cols) {\n                numCols = 1;\n                totalWidth = posX + margin.right - targetBounds.x;\n                posX = targetBounds.x + margin.left;\n                posY += maxHeight + interval.y;\n            }\n            else {\n                totalWidth = totalWantedWidth - targetBounds.x;\n            }\n            finalWidth = totalWidth > finalWidth ? totalWidth : finalWidth;\n            clip.nextTransform = { x: posX, y: posY };\n            posX += clipBounds.width + interval.x;\n            //this.setToPosGlobal({comp:[clip], target: target})\n        }\n        ;\n        var offsetX = (maxWidth - finalWidth) / 2;\n        for (var i = 0; i < comp.length; i++) {\n            clip = comp[i];\n            clip.nextTransform.x += offsetX;\n            var pt = clip.globalToLocal(clip.nextTransform.x, clip.nextTransform.y);\n            clip.x = pt.x;\n            clip.y = pt.y;\n        }\n    }\n    // setToGridGlobal({comp,target}){\n    // \tvar targetBounds  = this.getGlobalBounds(target);\n    // \tvar maxWidth = targetBounds.width;\n    // \tvar maxHeight = 0;\n    // \tvar clip;\n    // \tfor (var i = 0; i < comp.length; i++) {\n    // \t\tclip = comp[i];\n    // \t\tmaxHeight = clip.height>maxHeight ? clip.height : maxHeight;\n    // \t\tthis.setToPosGlobal({comp:[clip], target: target})\n    // \t};\n    // }\n    centerGlobal({ comp, target }) {\n        console.log(\"centerGlobal\");\n        for (var i = 0; i < comp.length; i++) {\n            this.center({ comp: [comp[i]], target: this.getGlobalBounds(target) });\n        }\n        ;\n    }\n    getBounds(comp, comp2) {\n        return {\n            x: comp.localToLocal(0, 0, comp2).x,\n            y: comp.localToLocal(0, 0, comp2).y,\n            width: comp.localToLocal(comp.width, 0, comp2).x - comp.localToLocal(0, 0, comp2).x,\n            height: comp.localToLocal(0, comp.height, comp2).y - comp.localToLocal(0, 0, comp2).y\n        };\n    }\n    getGlobalBounds(comp) {\n        return {\n            x: comp.localToGlobal(0, 0).x,\n            y: comp.localToGlobal(0, 0).y,\n            width: comp.localToGlobal(comp.width, 0).x - comp.localToGlobal(0, 0).x,\n            height: comp.localToGlobal(0, comp.height).y - comp.localToGlobal(0, 0).y\n        };\n    }\n    center({ comp, target }) {\n        console.log(\"center\", target, comp);\n        var targetBounds = { xc: target.x + target.width / 2, yc: target.y + target.height / 2 };\n        for (var i = 0; i < comp.length; i++) {\n            comp[i].x = targetBounds.xc - comp[i].width / 2;\n            comp[i].y = targetBounds.yc - comp[i].height / 2;\n        }\n        ;\n    }\n    centerH({ targets, ref }) {\n        //var refBounds = {xc:ref.x + ref.width/2, yc:ref.y + ref.height/2};\n        for (var i = 0; i < targets.length; i++) {\n            console.log(\"targets[i].x : \", targets[i].x, targets[i].width / 2, ref.width);\n            targets[i].x = ref.width - targets[i].width / 2;\n        }\n        ;\n    }\n    centerV({ comp, target }) {\n        console.log(\"centerV\", target);\n        var targetBounds = { xc: target.x + target.width / 2, yc: target.y + target.height / 2 };\n        for (var i = 0; i < comp.length; i++) {\n            comp[i].y = targetBounds.yc - comp[i].height / 2;\n        }\n        ;\n    }\n    enqueueHCenter({ targets, ref, margin = 0 }) {\n        var totalW = 0;\n        for (var i = 0; i < targets.length; i++) {\n            totalW += targets[i].width + (i == targets.length - 1 ? 0 : margin);\n        }\n        ;\n        var xPos = ref.x + ref.width / 2 - totalW / 2;\n        for (var i = 0; i < targets.length; i++) {\n            targets[i].x = xPos;\n            xPos += targets[i].width + (i == targets.length - 1 ? 0 : margin);\n        }\n        ;\n    }\n    enqueueVCenter({ comp, target, margin = 0 }) {\n        var totalH = 0;\n        for (var i = 0; i < comp.length; i++) {\n            totalH += comp[i].height + (i == comp.length - 1 ? 0 : margin);\n        }\n        ;\n        var yPos = target.y + target.height / 2 - totalH / 2;\n        for (var i = 0; i < comp.length; i++) {\n            comp[i].y = yPos;\n            yPos += comp[i].height + (i == comp.length - 1 ? 0 : margin);\n        }\n        ;\n    }\n    enqueueH({ comp, target, margin = 0 }) {\n        var xPos = target.x + target.width + margin;\n        for (var i = 0; i < comp.length; i++) {\n            comp[i].x = xPos;\n            xPos += comp[i].width + margin;\n        }\n        ;\n    }\n    enqueueV({ comp, target, margin = 0 }) {\n        var yPos = target.y + target.height + margin;\n        for (var i = 0; i < comp.length; i++) {\n            comp[i].y = yPos;\n            yPos += comp[i].height + margin;\n        }\n        ;\n    }\n    align({ ref, targets }) {\n        var alignObj;\n        for (var i = 0; i < targets.length; i++) {\n            alignObj = {\n                x: (targets[i].alignX || \"none\").replace(\"center\", \"centerX\"),\n                y: (targets[i].alignY || \"none\").replace(\"center\", \"centerY\")\n            };\n            this[\"align_\" + alignObj.x]({ target: targets[i], ref: ref });\n            this[\"align_\" + alignObj.y]({ target: targets[i], ref: ref });\n        }\n        ;\n    }\n    align_none({ ref, target }) {\n    }\n    align_left({ ref, target }) {\n        target.x = 0;\n    }\n    align_top({ ref, target }) {\n        target.y = 0;\n    }\n    align_bottom({ ref, target }) {\n        target.y = ref.height - target.height;\n    }\n    align_right({ ref, target }) {\n        target.x = ref.width - target.width;\n    }\n    align_centerX({ ref, target }) {\n        target.x = ref.width / 2 - target.width / 2;\n    }\n    align_centerY({ ref, target }) {\n        target.y = ref.height / 2 - target.height / 2;\n    }\n    //___________\n    alignLeft({ comp, target }) {\n        var xPos = target.x;\n        for (var i = 0; i < comp.length; i++) {\n            comp[i].x = xPos;\n        }\n        ;\n    }\n    alignTop({ comp, target }) {\n        var yPos = target.y;\n        for (var i = 0; i < comp.length; i++) {\n            comp[i].y = yPos;\n        }\n        ;\n    }\n    alignBottom({ comp, target }) {\n        var yPos = target.y + target.height;\n        for (var i = 0; i < comp.length; i++) {\n            comp[i].y = yPos - comp[i].height;\n        }\n        ;\n    }\n    alignRight({ comp, target }) {\n        var xPos = target.y + target.width;\n        for (var i = 0; i < comp.length; i++) {\n            comp[i].x = xPos - comp[i].width;\n        }\n        ;\n    }\n    fitIn({ comp, target }) {\n        var targetBounds = { xc: target.x + target.width / 2, yc: target.y + target.height / 2 };\n        for (var i = 0; i < comp.length; i++) {\n            if (comp[i].width / target.width > comp[i].height / target.height) {\n                comp[i].ratioWidth = target.width;\n            }\n            else {\n                comp[i].ratioHeight = target.height;\n            }\n            comp[i].x = targetBounds.xc - comp[i].width / 2;\n            comp[i].y = targetBounds.yc - comp[i].height / 2;\n        }\n        ;\n    }\n}\n"]}