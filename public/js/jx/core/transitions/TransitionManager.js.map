{"version":3,"sources":["../../../../src/jx/core/transitions/TransitionManager.js"],"names":["instance","singletonEnforcer","TransitionManager","jx","params","cl","db","classFromID","type"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,QAAIA,WAAW,IAAf;AACA,QAAIC;AAAA;AAAA,KAAJ;;QAEMC,iB;AACF,mCAAYC,EAAZ,EAAgB;AAAA;;AACZ,iBAAKA,EAAL,GAAUA,EAAV;AACH;;;;mCAIMC,M,EAAQ;AACX,oBAAIC,KAAK,KAAKF,EAAL,CAAQG,EAAR,CAAWC,WAAX,CAAuBH,OAAOI,IAA9B,CAAT;AACAJ,uBAAOD,EAAP,GAAY,KAAKA,EAAjB;AACA,uBAAO,IAAIE,EAAJ,CAAOD,MAAP,CAAP;AACH;;;0CAPoB;AAAE,oBAAI,CAAC,KAAKJ,QAAL,CAAL,EAAqB;AACxC,yBAAKA,QAAL,IAAiB,IAAIE,iBAAJ,CAAsBD,iBAAtB,CAAjB;AACH,iBAAC,OAAO,KAAKD,QAAL,CAAP;AAAwB;;;;;;sBAOfE,iB","file":"TransitionManager.js","sourcesContent":["let instance = null;\nlet singletonEnforcer = class SingetonEnforcer {\n};\nclass TransitionManager {\n    constructor(jx) {\n        this.jx = jx;\n    }\n    static getInstance() { if (!this[instance]) {\n        this[instance] = new TransitionManager(singletonEnforcer);\n    } return this[instance]; }\n    create(params) {\n        var cl = this.jx.db.classFromID(params.type);\n        params.jx = this.jx;\n        return new cl(params);\n    }\n}\nexport default TransitionManager;\n"]}