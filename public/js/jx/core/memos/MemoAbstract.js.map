{"version":3,"sources":["../../../../src/jx/core/memos/MemoAbstract.js"],"names":["MemoAbstract","dataObject","Object","assign","id","autosave","data","load","name","value","prop","setVar","varArr","split","varPath","parent","i","length","undefined","save","defaultValue","console","log","getVar"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAIMA,Y;;;AACF,8BAAYC,UAAZ,EAAwB;AAAA;;AAAA,oIACdC,OAAOC,MAAP,CAAc,EAAEC,IAAI,EAAN,EAAUC,UAAU,IAApB,EAAd,EAA0CJ,UAA1C,CADc;;AAEpB,kBAAKI,QAAL,GAAgB,MAAKJ,UAAL,CAAgBI,QAAhC;AACA,kBAAKC,IAAL,GAAY,EAAZ;AACA,gBAAI,MAAKD,QAAT,EACI,MAAKE,IAAL;AALgB;AAMvB;;;;mCAOMC,I,EAAMC,K,EAAO;AAChB,oBAAI,OAAOD,IAAP,IAAe,QAAnB,EAA6B;AACzB,yBAAK,IAAIE,IAAT,IAAiBF,IAAjB,EAAuB;AACnB,6BAAKG,MAAL,CAAYD,IAAZ,EAAkBF,KAAKE,IAAL,CAAlB;AACH;AACD;AACH;AACD,oBAAIE,SAASJ,KAAKK,KAAL,CAAW,GAAX,CAAb;AACA,oBAAIC,UAAU,EAAd;AACA,oBAAIC,SAAS,KAAKT,IAAlB;AACA,qBAAK,IAAIU,IAAI,CAAb,EAAgBA,IAAIJ,OAAOK,MAA3B,EAAmCD,GAAnC,EAAwC;AACpC,wBAAID,OAAOH,OAAOI,CAAP,CAAP,KAAqBE,SAAzB,EAAoC;AAChC,4BAAIF,KAAKJ,OAAOK,MAAP,GAAgB,CAAzB,EAA4B;AACxBF,mCAAOH,OAAOI,CAAP,CAAP,IAAoBP,KAApB;AACH,yBAFD,MAGK;AACDM,mCAAOH,OAAOI,CAAP,CAAP,IAAoB,EAApB;AACH;AACJ,qBAPD,MAQK;AACD,4BAAIA,KAAKJ,OAAOK,MAAP,GAAgB,CAAzB,EAA4B;AACxBF,mCAAOH,OAAOI,CAAP,CAAP,IAAoBP,KAApB;AACH;AACJ;AACDM,6BAASA,OAAOH,OAAOI,CAAP,CAAP,CAAT;AACH;AACD;AACA,oBAAI,KAAKX,QAAT,EACI,KAAKc,IAAL;AACJ,uBAAOV,KAAP;AACH;;;mCAOMD,I,EAAMY,Y,EAAc;AACvB,oBAAIR,SAASJ,KAAKK,KAAL,CAAW,GAAX,CAAb;AACA,oBAAIC,UAAU,EAAd;AACA,oBAAIC,SAAS,KAAKT,IAAlB;AACA,qBAAK,IAAIU,IAAI,CAAb,EAAgBA,IAAIJ,OAAOK,MAA3B,EAAmCD,GAAnC,EAAwC;AACpC,wBAAID,OAAOH,OAAOI,CAAP,CAAP,KAAqBE,SAAzB,EAAoC;AAChC,4BAAIF,KAAKJ,OAAOK,MAAP,GAAgB,CAAzB,EAA4B;AACxBF,mCAAOH,OAAOI,CAAP,CAAP,IAAoBI,YAApB;AACA,gCAAI,KAAKf,QAAT,EACI,KAAKc,IAAL;AACJ,mCAAOC,YAAP;AACH,yBALD,MAMK;AACDL,mCAAOH,OAAOI,CAAP,CAAP,IAAoB,EAApB;AACH;AACJ,qBAVD,MAWK;AACD,4BAAIA,KAAKJ,OAAOK,MAAP,GAAgB,CAAzB,EAA4B;AACxB,mCAAOF,OAAOH,OAAOI,CAAP,CAAP,CAAP;AACH;AACJ;AACDD,6BAASA,OAAOH,OAAOI,CAAP,CAAP,CAAT;AACH;AACD;AACH;;;sCACSR,I,EAAMC,K,EAAyB;AAAA,oBAAlBW,YAAkB,yDAAH,CAAG;;AACrCC,wBAAQC,GAAR,CAAY,KAAKC,MAAL,CAAYf,IAAZ,EAAkBY,YAAlB,IAAkCX,KAA9C;AACA,uBAAO,KAAKE,MAAL,CAAYH,IAAZ,EAAkB,KAAKe,MAAL,CAAYf,IAAZ,EAAkBY,YAAlB,IAAkCX,KAApD,CAAP;AACH;;;oCACO,CACP;;;mCACM,CACN;;;mCACM,CACN;;;;;;sBAEUT,Y","file":"MemoAbstract.js","sourcesContent":["import Component from \"jx/core/comps/Component\";\n/*\n* IMPORTANT : localstorage is used here for writing. This is not shared by browsers, only the browser where is create vars can retrieve them.\n*/\nclass MemoAbstract extends Component {\n    constructor(dataObject) {\n        super(Object.assign({ id: \"\", autosave: true }, dataObject));\n        this.autosave = this.dataObject.autosave;\n        this.data = {};\n        if (this.autosave)\n            this.load();\n    }\n    /* __\n     * sauve une variable de type string (genre cookie).\n     * @param {string} name\n     * @param {string} value\n     * @memberof! Memo#\n     */\n    setVar(name, value) {\n        if (typeof name != \"string\") {\n            for (var prop in name) {\n                this.setVar(prop, name[prop]);\n            }\n            return;\n        }\n        var varArr = name.split(\".\");\n        var varPath = \"\";\n        var parent = this.data;\n        for (var i = 0; i < varArr.length; i++) {\n            if (parent[varArr[i]] == undefined) {\n                if (i == varArr.length - 1) {\n                    parent[varArr[i]] = value;\n                }\n                else {\n                    parent[varArr[i]] = {};\n                }\n            }\n            else {\n                if (i == varArr.length - 1) {\n                    parent[varArr[i]] = value;\n                }\n            }\n            parent = parent[varArr[i]];\n        }\n        ;\n        if (this.autosave)\n            this.save();\n        return value;\n    }\n    /* __\n     * récupere une variable sauvée par setVariable\n     * @param  {string} name\n     * @return {string}\n     * @memberof! Memo#\n     */\n    getVar(name, defaultValue) {\n        var varArr = name.split(\".\");\n        var varPath = \"\";\n        var parent = this.data;\n        for (var i = 0; i < varArr.length; i++) {\n            if (parent[varArr[i]] == undefined) {\n                if (i == varArr.length - 1) {\n                    parent[varArr[i]] = defaultValue;\n                    if (this.autosave)\n                        this.save();\n                    return defaultValue;\n                }\n                else {\n                    parent[varArr[i]] = {};\n                }\n            }\n            else {\n                if (i == varArr.length - 1) {\n                    return parent[varArr[i]];\n                }\n            }\n            parent = parent[varArr[i]];\n        }\n        ;\n    }\n    incNumber(name, value, defaultValue = 0) {\n        console.log(this.getVar(name, defaultValue) + value);\n        return this.setVar(name, this.getVar(name, defaultValue) + value);\n    }\n    clear() {\n    }\n    save() {\n    }\n    load() {\n    }\n}\nexport default MemoAbstract;\n"]}