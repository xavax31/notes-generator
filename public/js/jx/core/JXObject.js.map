{"version":3,"sources":["../../../src/jx/core/JXObject.js"],"names":["protos","JXObject","dataObject","jx","jxClass","_implements","clPath","getProto","__proto__","constructor","name","undefined","arr","split","length","path","toLowerCase","_render","console","log","cl","db","getClass","initialiseMod","className","parentClass","namesArr","classObj","targetClassName","parentJXObjectClass","_getParentClass","i","member","Object","getOwnPropertyDescriptor","prototype","enumerable","defineProperty","args","protoName","proto","render"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,QAAIA,SAAS,EAAb;;QASqBC,Q;AAEjB,4BAA6B;AAAA,gBAAjBC,UAAiB,yDAAJ,EAAI;;AAAA;;AAKzB,iBAAKA,UAAL,GAAkBA,UAAlB;;AAEA,iBAAKC,EAAL,GAAU,KAAKD,UAAL,CAAgBC,EAAhB,KAAuB,KAAKD,UAAL,CAAgBE,OAAhB,GAA0B,IAAK,KAAKF,UAAL,CAAgBE,OAArB,CAA8B,IAA9B,CAA1B,GAAgE,mBAAS,IAAT,CAAvF,CAAV;AACA,iBAAKC,WAAL,GAAmB,EAAnB;AACH;;;;wCAYWC,M,EAAQ;AAChB,oBAAIL,SAASM,QAAT,CAAkB,KAAKC,SAAL,CAAeC,WAAf,CAA2BC,IAA7C,KAAsDC,SAA1D,EACI;AACJ,oBAAIC,MAAMN,OAAOO,KAAP,CAAa,GAAb,CAAV;AACA,oBAAID,IAAIE,MAAJ,IAAc,CAAlB,EAAqB;AACjB,wBAAIC,OAAO,cAAcT,OAAOU,WAAP,EAAd,GAAqC,GAArC,GAA2CV,MAA3C,GAAoD,KAAKW,OAApE;AACH,iBAFD,MAGK;AACD,wBAAIF,OAAOT,MAAX;AACH;AACDY,wBAAQC,GAAR,CAAY,aAAZ,EAA2BJ,IAA3B;AACA,oBAAIK,KAAK,KAAKjB,EAAL,CAAQkB,EAAR,CAAWC,QAAX,CAAoBP,IAApB,CAAT;;AAEAK,mBAAGG,aAAH,CAAiB,IAAjB;AAEH;;;4CACeC,S,EAAW;AACvB,oBAAIC,cAAc,KAAKjB,SAAvB;AACA,uBAAOiB,YAAYhB,WAAZ,CAAwBC,IAAxB,IAAgCc,SAAvC,EAAkD;AAC9CC,kCAAcA,YAAYjB,SAA1B;AACH;AACD,uBAAOiB,WAAP;AACH;;;qDACwB;AACrB,oBAAIA,cAAc,KAAKjB,SAAvB;AACA,uBAAOiB,YAAYhB,WAAZ,CAAwBC,IAAxB,IAAgC,UAAvC,EAAmD;AAC/Ce,kCAAcA,YAAYjB,SAA1B;AACH;AACD,uBAAOiB,WAAP;AACH;;;kCAOKC,Q,EAAUC,Q,EAAwC;AAAA,oBAA9BC,eAA8B,yDAAZ,UAAY;;AACpD,oBAAIlB,IAAJ;AACA,oBAAImB,sBAAsB,KAAKC,eAAL,CAAqBF,eAArB,CAA1B;AACA,qBAAK,IAAIG,IAAI,CAAb,EAAgBA,IAAIL,SAASZ,MAA7B,EAAqCiB,GAArC,EAA0C;AACtCrB,2BAAOgB,SAASK,CAAT,CAAP;;AAEA,wBAAIC,SAASC,OAAOC,wBAAP,CAAgCP,SAASQ,SAAzC,EAAoDzB,IAApD,CAAb;AACA,wBAAIsB,MAAJ,EAAY;AACRA,+BAAOI,UAAP,GAAoB,IAApB;AACAH,+BAAOI,cAAP,CAAsBR,mBAAtB,EAA2CnB,IAA3C,EAAiDsB,MAAjD;AACH,qBAHD,MAIK;AACD,8BAAM,uCAAuCtB,IAAvC,GAA8C,OAA9C,GAAwD,KAAKF,SAAL,CAAeC,WAAf,CAA2BC,IAAzF;AACH;AACJ;AACD;AACH;;;0CAKmB;AAAA,kDAAN4B,IAAM;AAANA,wBAAM;AAAA;;AAChB,qBAAK,IAAIP,IAAI,CAAb,EAAgBA,IAAIO,KAAKxB,MAAzB,EAAiCiB,GAAjC,EAAsC;AAClC,yBAAK1B,WAAL,CAAiBiC,KAAKP,CAAL,CAAjB,IAA4B,IAA5B;AACH;AACD;AACH;;;qCAzEeQ,S,EAAW;AACvB,uBAAOvC,OAAOuC,SAAP,CAAP;AACH;;;qCACeC,K,EAAOC,M,EAAQ;AAC3BzC,uBAAOwC,MAAM/B,WAAN,CAAkBC,IAAlB,GAAyB+B,MAAhC,IAA0CD,KAA1C;AAEH;;;;;;sBAlBgBvC,Q","file":"JXObject.js","sourcesContent":["import Core from \"jx/core/Core\";\nlet protos = {};\n/**\n * All components extends JXObject.\n * JXObject does principally 2 things: attach jx instance of the super parent mainCtrl to object and\n * add this.dataObject property which keep dataObject provided as argument,\n * used for later initialization.\n *\n * JXObject provides also some core functions used for classes extensions and mixins.\n */\nexport default class JXObject {\n    //constructor (jxCore=null, {jx=null}={}) {\n    constructor(dataObject = {}) {\n        /**\n        * dataObject provided in constructor arguments, merged with default values.\n        * @protected\n        */\n        this.dataObject = dataObject;\n        /** linked jx engine */\n        this.jx = this.dataObject.jx || (this.dataObject.jxClass ? new (this.dataObject.jxClass)(this) : new Core(this));\n        this._implements = {};\n    }\n    static getProto(protoName) {\n        return protos[protoName];\n    }\n    static setProto(proto, render) {\n        protos[proto.constructor.name + render] = proto;\n        //console.log(\"PRO\",protos)\n    }\n    /**\n    * Simulate heritage of a class by mixin.\n    * @protected\n    */\n    extendsFrom(clPath) {\n        if (JXObject.getProto(this.__proto__.constructor.name) != undefined)\n            return;\n        var arr = clPath.split(\".\");\n        if (arr.length == 1) {\n            var path = \"jx/comps/\" + clPath.toLowerCase() + \"/\" + clPath + this._render;\n        }\n        else {\n            var path = clPath;\n        }\n        console.log(\"extendsfrom\", path);\n        var cl = this.jx.db.getClass(path);\n        //console.log(cl)\n        cl.initialiseMod(this);\n        //JXObject.setProto( this.__proto__, this._render);\n    }\n    _getParentClass(className) {\n        var parentClass = this.__proto__;\n        while (parentClass.constructor.name != className) {\n            parentClass = parentClass.__proto__;\n        }\n        return parentClass;\n    }\n    getJXObjectParentClass() {\n        var parentClass = this.__proto__;\n        while (parentClass.constructor.name != \"JXObject\") {\n            parentClass = parentClass.__proto__;\n        }\n        return parentClass;\n    }\n    /**\n    * Add members of a class to this class prototype.\n    * @param {array} namesArr - Array of names of members to add to this class prototype.\n    * @param {class} classObj - class of this instance.\n    * @param {string} targetClassName - name of class in the hierarchy heritage which receive the new members. By default the top parent JXObject class is used.\n    */\n    mixin(namesArr, classObj, targetClassName = \"JXObject\") {\n        var name;\n        var parentJXObjectClass = this._getParentClass(targetClassName);\n        for (var i = 0; i < namesArr.length; i++) {\n            name = namesArr[i];\n            //console.log(name)\n            var member = Object.getOwnPropertyDescriptor(classObj.prototype, name);\n            if (member) {\n                member.enumerable = true;\n                Object.defineProperty(parentJXObjectClass, name, member);\n            }\n            else {\n                throw \"Error during mixin with property '\" + name + \"' in \" + this.__proto__.constructor.name;\n            }\n        }\n        ;\n    }\n    /**\n    * For eventually later use. Allow each component to indicate which interfaces it implements.\n    * Could allow later to automatically check that a component implements the asked interface.\n    */\n    implements(...args) {\n        for (var i = 0; i < args.length; i++) {\n            this._implements[args[i]] = true;\n        }\n        ;\n    }\n}\n"]}