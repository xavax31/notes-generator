{"version":3,"sources":["../../../src/jx/projecttypes/ProjectUnknow.js"],"names":["ProjectUnknow","dataObject","console","log","_functionnalities","info","url","projectURL","projectJXData","testURL","importer","jx","exporter","projectInfo","onFinished","importConfig","json","tools","mergeObjectIn","projectData","projectInformations","project","engine","gabarit","modules","target","id","idArr","split","item","children","i","length","_getInGabarit","type","childrenG","exportConfig","rid","alert","callback","params","options","date","extExclude","fileExclude","dirExclude","treeOnly","merge","deleteSource","recursive","editor","cloneDir","sourcePath","destPath","result","download","prefixZip","version","internPath","appData","popupContent","popup","title","content","buttons","onclose","$","find","click","evt","action","currentTarget","ok","label","no","popup2","closable","sendToTest","modal","buildProjectIntern","buildProjectLastReleaseJX","downloadFullProject"],"mappings":"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","file":"ProjectUnknow.js","sourcesContent":["import ProjetManager from \"jx/projecttypes/ProjectManager\";\nimport Importer from \"jx/projecttypes/editorformattype2/Importer\";\nimport Exporter from \"jx/projecttypes/editorformattype2/Exporter\";\nexport default class ProjectUnknow extends ProjetManager {\n    constructor(dataObject) {\n        super(dataObject);\n    }\n    _create() {\n        console.log(\"ProjectUnknow create\");\n        super._create();\n        this._functionnalities = [\"editGabarit\", \"openProjectDir\", \"openSublimeProject\", \"pullProject\", \"pushProject\", \"pushProjectSrc\", \"save\", \"testBtnDev\"];\n        this.info.url = this.dataObject.url;\n        this.info.projectURL = this.dataObject.url; // don't use\n        this.info.projectJXData = this.dataObject.projectJXData; // don't use\n        this.testURL = \"/builds\" + this.info.url;\n        this.importer = new Importer(this.jx, this.info);\n        this.exporter = new Exporter(this.jx, { projectInfo: this.info });\n    }\n    load(onFinished) {\n        this.importer.importConfig(projectData => {\n            console.log(\"config imported\", this);\n            this.json = this.importer.json;\n            this.jx.tools.mergeObjectIn(this.info, projectData.projectInformations.project);\n            this.info.engine = projectData.projectInformations.engine;\n            this.info.gabarit = projectData.modules[0].gabarit;\n            onFinished({ target: this });\n        });\n    }\n    getJSON() {\n        return this.json;\n    }\n    /** */\n    getInGabarit({ id, gabarit = this.info.gabarit }) {\n        console.log(id);\n        console.log(gabarit);\n        var idArr = id.split(\".\");\n        var item;\n        var children = gabarit;\n        for (var i = 0; i < idArr.length; i++) {\n            item = this._getInGabarit({ id: idArr[i], gabarit: children });\n            if (item.children) {\n                children = item.children;\n            }\n        }\n        ;\n        return item;\n    }\n    /** */\n    _getInGabarit({ id, gabarit = this.info.gabarit }) {\n        console.log(id);\n        console.log(gabarit);\n        var idArr = id.split(\".\");\n        for (var i = 0; i < idArr.length; i++) {\n            idArr[i];\n        }\n        ;\n        for (var i = 0; i < gabarit.length; i++) {\n            console.log(gabarit[i].id);\n            if (gabarit[i].id == id) {\n                console.log(\"FOUND\");\n                return gabarit[i];\n            }\n            else if (gabarit[i].type == \"Group\") {\n                console.log(\"Group\", gabarit[i].id);\n                var childrenG = this._getInGabarit({ id: id, gabarit: gabarit[i].children });\n                if (childrenG != null) {\n                    return this._getInGabarit({ id: id, gabarit: gabarit[i].children });\n                }\n                ;\n            }\n        }\n        ;\n        return null;\n    }\n    save(onFinished) {\n        this.exporter.exportConfig(onFinished);\n        //this.adaptIndexHTMLPage(this.info);\n    }\n    /** Show preview of project */\n    preview(rid = null) {\n        console.log(this);\n        alert(\"not available for this project type\");\n    }\n    /** Show preview of project */\n    previewDebug(rid = null) {\n        alert(\"not available for this project type\");\n    }\n    /** Show preview of project */\n    previewDev(rid = null) {\n        alert(\"not available for this project type\");\n    }\n    updateInternJXDialog(callback = evt => { }) {\n        alert(\"not available for this project type\");\n    }\n    /** */\n    sendToTest(params = null, callback = evt => { }) {\n        alert(\"not available for this project type\");\n    }\n    downloadTest() {\n        alert(\"not available for this project type\");\n    }\n    previewTest() {\n        alert(\"not available for this project type\");\n    }\n    /** */\n    downloadFullProject(params = null, callback = evt => { }) {\n        console.log(\"buildProjectIntern\");\n        var options = {\n            date: false,\n            extExclude: [],\n            fileExclude: [],\n            dirExclude: [\"\\.git\"],\n            treeOnly: false,\n            merge: false,\n            deleteSource: false,\n            recursive: 10000 // level of recursivity in directories\n        };\n        this.jx.editor.cloneDir({\n            sourcePath: this.info.url,\n            destPath: \"$temp\" + this.info.url,\n            options: options\n        }, (result) => {\n            console.log(\"cloneFullProject OK\", result);\n            this.jx.editor.download({ url: result.destPath, prefixZip: this.info.id + \"_\" + this.info.version + \"_FULL\", internPath: this.info.id, date: true });\n            callback(result);\n        });\n    }\n    /** */\n    buildProjectIntern(params = null, callback = evt => { }) {\n        console.log(\"buildProjectIntern\");\n        alert(\"not available for this project type\");\n        callback();\n    }\n    /** */\n    buildProjectLastReleaseJX(params = null, callback = evt => { }) {\n        alert(\"not available for this project type\");\n        callback();\n    }\n    /** */\n    copyProject(params, callback) {\n        console.log(\"buildProject\");\n        var options = {\n            date: true,\n            extExclude: [],\n            fileExclude: [],\n            dirExclude: [],\n            // fichier_reg_exclude: [ ],    // exclude files for wich name matches these regular expressions\n            // dossier_reg_exclude: [],     // exclude directories for wich name matches these regular expressions\n            treeOnly: false,\n            merge: false,\n            deleteSource: false,\n            recursive: 10000 // level of recursivity in directories\n        };\n        this.jx.editor.cloneDir({\n            sourcePath: this.info.url,\n            destPath: \"$temp\" + this.info.url,\n            options: options\n        }, (result) => {\n            console.log(\"buildProject OK\", result);\n            callback(result);\n        });\n    }\n    /** Export project */\n    exportDial(appData) {\n        let popupContent = `\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<div class=\"col-xs-12\">\n\t\t\t\t\t\t<h4>Envoi en Test</h4>\n\t\t\t\t\t\t<div style=\"font-size:14px\">Envoie une publication du projet actuel en Test, visualisable pendant que l'on continue à modifier le projet</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<div class=\"col-xs-12\">\n\t\t\t    \t\t<button type=\"button\" class=\"btn btn-default label-info btn-lg\" title=\"Envoyer en Test\" id=\"sendToTest\"><span class=\"fa fa-share-square-o\"></span></button>\n\t\t\t    \t\t<button type=\"button\" class=\"btn btn-default\" title=\"Télécharger la version actuellement en Test\" id=\"downloadTest\"><span class=\"fa fa-download\"></span></button>\n\t\t\t    \t<div>\n\t\t\t    </div>\n\n\t\t\t    <hr>\n\t\t\t    \n\t\t\t    <div class=\"row\">\n\t\t\t    \t<div class=\"col-xs-12\">\n\t\t\t    \t\t<h4>Exporter le projet actuel</h4>\n\t\t\t    \t</div>\n\t\t\t    </div>\n\n\n\n\t\t\t    <hr>\n\t\t\t    <div class=\"row\">\n\t\t\t    \t<div class=\"col-xs-12\">\n\t\t\t    \t\t<button type=\"button\" class=\"btn btn-default\" style=\"width:100%; text-align: left\" title=\"Télécharger tout le dossier du projet\" id=\"downloadFullProject\"><span class=\"fa fa-download\"></span> Tout le dossier du projet</button>\n\n\t\t\t    \t</div>\n\t\t\t    </div>\n\n\t\t`;\n        var popup = this.jx.editor.popup({ title: \"Exporter le projet\", content: popupContent, buttons: {}, onclose: evt => { } });\n        $(popup).find(\".btn\").click((evt) => {\n            var action = evt.currentTarget.id;\n            switch (action) {\n                case \"sendToTest\":\n                    this.jx.editor.popup({ title: \"Comfirmation de l'envoi en Test\",\n                        content: \"Attention, cette action va remplacer la version actuellement en Test par la version du projet en cours.\\n Etes-vous sûr ?\",\n                        buttons: {\n                            ok: { label: \"Oui\" },\n                            no: { label: \"Non\" }\n                        },\n                        onclose: evt => {\n                            if (evt.action == \"ok\") {\n                                var popup2 = this.jx.editor.alert({ title: \"Opération en cours\", content: \"Veuillez patienter svp...\", closable: false });\n                                this.sendToTest(null, evt => {\n                                    popup2.modal('hide');\n                                });\n                            }\n                        }\n                    });\n                    break;\n                case \"buildProjectIntern\":\n                    var popup2 = this.jx.editor.alert({ title: \"Opération en cours\", content: \"Veuillez patienter svp...\", closable: false });\n                    this.buildProjectIntern(null, evt => {\n                        popup2.modal('hide');\n                    });\n                    break;\n                case \"buildProjectLastReleaseJX\":\n                    var popup2 = this.jx.editor.alert({ title: \"Opération en cours\", content: \"Veuillez patienter svp...\", closable: false });\n                    this.buildProjectLastReleaseJX(null, evt => {\n                        popup2.modal('hide');\n                    });\n                    break;\n                case \"downloadFullProject\":\n                    var popup2 = this.jx.editor.alert({ title: \"Opération en cours\", content: \"Veuillez patienter svp...\", closable: false });\n                    this.downloadFullProject(null, evt => {\n                        popup2.modal('hide');\n                    });\n                    break;\n                default:\n                    if (this[action])\n                        this[action](null, evt => { });\n            }\n        });\n        // popup.modal('hide') // close popup\n    }\n}\n"]}