{"version":3,"sources":["../../../../src/jx/projecttypes/editorformattype1/Exporter.js"],"names":["Exporter","jx","dataObject","Object","assign","url","projectJXData","projectInfo","onFinished","console","log","gabarit","_exportEditorFiles","_exportModuleFiles","_finish","callback","fileURL","objectData","formatJSON","projectData","db","saveJSON","ProjectInformations","id","version","engine","srcPath","_getResourcesFromGabarit","gabaritResources","i","length","concat","_getResourcesFromGroup","group","item","itemClone","type","j","children","prop","description","editable","asset","preload","undefined","src","push","compType","value","Number","options","quizGroup","profilsGroup","json","titre","questions","profils","conclusions","question","iq","text","_getGroupChildByID","tools","gd","answers","ir","good","style","ip","saveText","JSON","stringify","childID","_destroy"],"mappings":"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","file":"Exporter.js","sourcesContent":["import JXObject from \"jx/core/JXObject\";\nexport default class Exporter extends JXObject {\n    constructor(jx, dataObject) {\n        super({ jx });\n        this.dataObject = Object.assign({\n            url: null,\n            projectJXData: null\n        }, dataObject);\n        this.projectInfo = this.dataObject.projectInfo;\n    }\n    exportConfig(onFinished) {\n        console.log(\"gabarit\", this.projectInfo.gabarit);\n        this.onFinished = onFinished;\n        //this._exportModuleFiles(()=>{this._finish();});\n        this._exportEditorFiles(() => { this._exportModuleFiles(() => { this._finish(); }); });\n    }\n    _exportEditorFiles(callback) {\n        var fileURL = this.projectInfo.url + \"/etc/editor/editor.json\";\n        this.objectData = {\n            formatJSON: \"SimpleJSON2\",\n            projectData: this.projectInfo.gabarit\n        };\n        this.jx.db.saveJSON(fileURL, this.objectData, () => callback());\n    }\n    _exportModuleFiles(callback) {\n        var fileURL = this.projectInfo.url + \"/public/assets/config.json\";\n        this.objectData = {\n            ProjectInformations: {\n                \"id\": this.projectInfo.id,\n                \"version\": this.projectInfo.version,\n                \"monitor\": {\n                    \"enabled\": false,\n                    \"popupAlerts\": false\n                },\n                \"defaultViewType\": \"CJS\",\n                \"framerate\": \"50\",\n                \"mainCtrl\": \"src/index\"\n            },\n            \"entry-point\": {}\n        };\n        this.objectData[\"entry-point\"][this.projectInfo.engine.srcPath] = {\n            \"config\": {},\n            \"defaultViewType\": \"CJS\",\n            \"framerate\": \"50\",\n            \"resources\": this._getResourcesFromGabarit(this.projectInfo.gabarit),\n            \"styles\": []\n        };\n        this.jx.db.saveJSON(fileURL, this.objectData, () => callback());\n    }\n    _getResourcesFromGabarit(gabarit) {\n        var gabaritResources = [];\n        if (gabarit != null) {\n            // if(this.projectData.projectInformations.build && this.projectData.projectInformations.build.type == \"kimitest\"){\n            // \tthis._getKimiTestJson(gabarit);\n            // }\n            for (var i = 0; i < gabarit.length; i++) {\n                if (gabarit[i].id == \"Informations\")\n                    continue;\n                gabaritResources = gabaritResources.concat(this._getResourcesFromGroup(gabarit[i]));\n            }\n        }\n        return gabaritResources;\n    }\n    _getResourcesFromGroup(group) {\n        var gabaritResources = [];\n        if (group != null) {\n            var item = null;\n            var itemClone = null;\n            //console.log(group.id)\n            if (group.type == \"DataObject\") {\n                var dataObject = {};\n            }\n            ;\n            for (var j = 0; j < group.children.length; j++) {\n                item = group.children[j];\n                itemClone = {};\n                for (var prop in item) {\n                    itemClone[prop] = item[prop];\n                }\n                delete itemClone.description;\n                delete itemClone.editable;\n                switch (item.type) {\n                    case \"Sound\":\n                    case \"Image\":\n                        itemClone.asset = {};\n                        for (var prop in item.asset) {\n                            itemClone.asset[prop] = item.asset[prop];\n                        }\n                        itemClone.asset.id = item.id,\n                            itemClone.asset.type = item.type,\n                            itemClone.asset.preload = (item.asset.preload != undefined) ? item.asset.preload : true;\n                        console.log(\"itemClone : \", itemClone.preload, \"item : \", item.asset.preload);\n                        itemClone.asset.src = \"assets/\" + item.asset.src;\n                        if (group.type == \"DataObject\") {\n                            dataObject[item.id] = itemClone.asset;\n                        }\n                        else {\n                            gabaritResources.push(itemClone.asset);\n                        }\n                        break;\n                    case \"Animation\":\n                        itemClone.asset = {};\n                        for (var prop in item.asset) {\n                            itemClone.asset[prop] = item.asset[prop];\n                        }\n                        itemClone.asset.id = item.id,\n                            item.asset.compType = item.type,\n                            itemClone.asset.type = item.asset.type,\n                            itemClone.asset.preload = (item.asset.preload != undefined) ? item.asset.preload : true;\n                        itemClone.asset.src = \"assets/\" + item.asset.src;\n                        if (group.type == \"DataObject\") {\n                            dataObject[item.id] = itemClone.asset;\n                        }\n                        else {\n                            gabaritResources.push(itemClone.asset);\n                        }\n                        break;\n                    case \"Flashtml\":\n                        itemClone.asset = {};\n                        for (var prop in item.asset) {\n                            itemClone.asset[prop] = item.asset[prop];\n                        }\n                        itemClone.asset.id = item.id,\n                            item.asset.compType = item.type,\n                            itemClone.asset.type = item.asset.type,\n                            itemClone.asset.preload = (item.asset.preload != undefined) ? item.asset.preload : true;\n                        itemClone.asset.src = \"assets/\" + item.asset.src;\n                        if (group.type == \"DataObject\") {\n                            dataObject[item.id] = itemClone.asset;\n                        }\n                        else {\n                            gabaritResources.push(itemClone.asset);\n                        }\n                        break;\n                    case \"Text\":\n                    case \"Parameter\":\n                        if (group.type == \"DataObject\") {\n                            dataObject[item.id] = itemClone.value;\n                        }\n                        else {\n                            gabaritResources.push(itemClone);\n                        }\n                        break;\n                    case \"Number\":\n                        itemClone.value = Number(itemClone.value);\n                        if (group.type == \"DataObject\") {\n                            dataObject[item.id] = itemClone.value;\n                        }\n                        else {\n                            gabaritResources.push(itemClone);\n                        }\n                        break;\n                    case \"ComboBox\":\n                        itemClone.type = \"*\";\n                        delete itemClone.options;\n                        if (group.type == \"DataObject\") {\n                            dataObject[item.id] = itemClone.value;\n                        }\n                        else {\n                            gabaritResources.push(itemClone);\n                        }\n                        break;\n                    case \"Group\":\n                    case \"DataObject\":\n                        gabaritResources = gabaritResources.concat(this._getResourcesFromGroup(item));\n                        break;\n                    default:\n                        if (group.type == \"DataObject\") {\n                            dataObject[item.id] = itemClone.value;\n                        }\n                        else {\n                            gabaritResources.push(itemClone);\n                        }\n                        break;\n                }\n            }\n            if (group.type == \"DataObject\") {\n                gabaritResources.push({ id: group.id, type: \"DataObject\", value: dataObject });\n            }\n        }\n        return gabaritResources;\n    }\n    _getKimiTestJson(gabarit) {\n        for (var i = 0; i < gabarit.length; i++) {\n            if (gabarit[i].id == \"QUIZ\") {\n                var quizGroup = gabarit[i];\n            }\n            else if (gabarit[i].id == \"PROFILS\") {\n                var profilsGroup = gabarit[i];\n            }\n        }\n        var json = { titre: {}, questions: [], profils: {}, conclusions: {} };\n        var question;\n        for (var iq = 1; iq <= 10; iq++) {\n            question = { id: iq, text: this._getGroupChildByID(quizGroup, \"Q\" + this.jx.tools.gd(iq, 2) + \"_T\").value, answers: [] };\n            for (var ir = 1; ir <= 3; ir++) {\n                question.answers.push({ id: ir, text: this._getGroupChildByID(quizGroup, \"Q\" + this.jx.tools.gd(iq, 2) + \"_R\" + this.jx.tools.gd(ir, 2) + \"_T\").value, good: (ir == 1) });\n            }\n            ;\n            json.questions.push(question);\n        }\n        ;\n        json.titre = {\n            text: this._getGroupChildByID(quizGroup, \"Title\").value,\n            style: { \"fontName\": \"Harimau\", \"fontStyle\": \"normal\", \"fontSize\": \"30px\", \"color\": \"#000000\" }, \"offset\": { \"x\": 0, \"y\": 0 }\n        };\n        for (var ip = 1; ip <= 3; ip++) {\n            json.profils[ip] = this._getGroupChildByID(profilsGroup, \"PROFIL_0\" + ip + \"_T\").value;\n            json.conclusions[ip] = this._getGroupChildByID(profilsGroup, \"CONCLU_0\" + ip).value;\n        }\n        ;\n        // console.log(JSON.stringify(json, null, 4));\n        this.jx.db.saveText(this.projectData.url + \"/public/src/config.js\", \"var editorGameConfig=\" + JSON.stringify(json, null, 4), () => { });\n    }\n    _getGroupChildByID(group, childID) {\n        for (var i = 0; i < group.children.length; i++) {\n            if (group.children[i].id == childID) {\n                return group.children[i];\n            }\n        }\n        ;\n        return null;\n    }\n    _finish() {\n        this._destroy();\n        this.onFinished();\n    }\n    _destroy() {\n    }\n}\n"]}