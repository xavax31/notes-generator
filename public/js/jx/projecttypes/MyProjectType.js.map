{"version":3,"sources":["../../../src/jx/projecttypes/MyProjectType.js"],"names":["MyProjectType","dataObject","Object","assign","url","info","importer","jx","exporter","projectInfo","onFinished","importConfig","console","log","json","tools","mergeObjectIn","projectData","projectInformations","project","engine","gabarit","modules","target","exportConfig","rid","alert"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAGqBA,a;;;AACjB,+BAAYC,UAAZ,EAAwB;AAAA;;AAAA,sIACdC,OAAOC,MAAP,CAAc;AAChBC,qBAAK;AADW,aAAd,EAEHH,UAFG,CADc;;AAcpB,kBAAKI,IAAL,CAAUD,GAAV,GAAgB,MAAKH,UAAL,CAAgBG,GAAhC;AACA,kBAAKE,QAAL,GAAgB,uBAAa,MAAKC,EAAlB,EAAsB,MAAKF,IAA3B,CAAhB;AACA,kBAAKG,QAAL,GAAgB,uBAAa,MAAKD,EAAlB,EAAsB,EAAEE,aAAa,MAAKJ,IAApB,EAAtB,CAAhB;AAhBoB;AAiBvB;;;;iCAgBIK,U,EAAY;AAAA;;AACb,qBAAKJ,QAAL,CAAcK,YAAd,CAA2B,uBAAe;AACtCC,4BAAQC,GAAR,CAAY,iBAAZ;AACA,2BAAKC,IAAL,GAAY,OAAKR,QAAL,CAAcQ,IAA1B;AACA,2BAAKP,EAAL,CAAQQ,KAAR,CAAcC,aAAd,CAA4B,OAAKX,IAAjC,EAAuCY,YAAYC,mBAAZ,CAAgCC,OAAvE;AACA,2BAAKd,IAAL,CAAUe,MAAV,GAAmBH,YAAYC,mBAAZ,CAAgCE,MAAnD;AACA,2BAAKf,IAAL,CAAUgB,OAAV,GAAoBJ,YAAYK,OAAZ,CAAoB,CAApB,EAAuBD,OAA3C;AACAX,+BAAW,EAAEa,cAAF,EAAX;AACH,iBAPD;AAQH;;;iCACIb,U,EAAY;AACb,qBAAKF,QAAL,CAAcgB,YAAd,CAA2Bd,UAA3B;AAEH;;;sCACS;AACN,uBAAO,KAAKI,IAAZ;AACH;;;sCAEmB;AAAA,oBAAZW,GAAY,yDAAN,IAAM;;AAChBC,sBAAM,SAAN;AACH;;;;;;sBAtDgB1B,a","file":"MyProjectType.js","sourcesContent":["import ProjectManager from \"jx/projecttypes/ProjectManager\";\nimport Importer from \"jx/projecttypes/editorformattype2/Importer\";\nimport Exporter from \"jx/projecttypes/editorformattype2/Exporter\";\nexport default class MyProjectType extends ProjectManager {\n    constructor(dataObject) {\n        super(Object.assign({\n            url: null\n        }, dataObject));\n        /*\n        this.info = {\n            id:\n            url:\n            title:\n            gabarit: direct jsondata\n            engine: {engine infos json}\n            ... : all properties in Informations.project json\n         \n        }*/\n        this.info.url = this.dataObject.url;\n        this.importer = new Importer(this.jx, this.info);\n        this.exporter = new Exporter(this.jx, { projectInfo: this.info });\n    }\n    // _create(){\n    // \t// console.log(\"ApplicationBabelHTML5Base create\")\n    // \t super._create();\n    // \t// this._functionnalities.push(\"previewDev\", \"transpilProject\",\"updateInternJX\", \"showVersion\", \"compareJSON\", \"generateDoc\");\n    // \t// this.info.url = this.dataObject.url\n    // \t// this.info.projectURL = this.dataObject.url // don't use\n    // \t// this.info.projectJXData = this.dataObject.projectJXData // don't use\n    // \t// this.testURL = \"/builds\" + this.info.url;\n    // \t// this._bayamTestOpts = {\n    // \t// \turl: \"/builds/bayam\",\n    // \t// \tprefix: \"link\",\n    // \t// \tnumBubbles: 11\n    // \t// }\n    // \t// this.json = null;\n    // }\n    load(onFinished) {\n        this.importer.importConfig(projectData => {\n            console.log(\"config imported\", this);\n            this.json = this.importer.json;\n            this.jx.tools.mergeObjectIn(this.info, projectData.projectInformations.project);\n            this.info.engine = projectData.projectInformations.engine;\n            this.info.gabarit = projectData.modules[0].gabarit;\n            onFinished({ target: this });\n        });\n    }\n    save(onFinished) {\n        this.exporter.exportConfig(onFinished);\n        //this.adaptIndexHTMLPage(this.info);\n    }\n    getJSON() {\n        return this.json;\n    }\n    /** Show preview of project or item rid */\n    preview(rid = null) {\n        alert(\"preview\");\n    }\n}\n"]}