{"version":3,"sources":["../../../src/jx/projecttypes/ApplicationMinimalBase.js"],"names":["ApplicationMinimalBase","dataObject","console","log","info","url","projectURL","projectJXData","testURL","json","id","gabarit","idArr","split","item","children","i","length","_getInGabarit","type","childrenG","onFinished","importer","importConfig","projectData","gabaritJSON","jx","tools","mergeObjectIn","projectInformations","project","modules","target","exporter","exportConfig","params","callback","options","date","extExclude","fileExclude","dirExclude","treeOnly","merge","deleteSource","recursive","editor","cloneDir","sourcePath","destPath","result","_generateHTMLPages","destDir","jxVersion","download","prefixZip","internPath","version","appData","popupContent","popup","title","content","buttons","onclose","$","find","click","evt","action","currentTarget","ok","label","no","popup2","alert","closable","sendToTest","modal","buildProjectIntern","buildProjectLastReleaseJX","downloadFullProject"],"mappings":"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","file":"ApplicationMinimalBase.js","sourcesContent":["import ProjetManager from \"jx/projecttypes/ProjectManager\";\nexport default class ApplicationMinimalBase extends ProjetManager {\n    constructor(dataObject) {\n        super(dataObject);\n    }\n    _create() {\n        console.log(\"ApplicationHTML5Base create\");\n        super._create();\n        this.info.url = this.dataObject.url;\n        this.info.projectURL = this.dataObject.url; // don't use\n        this.info.projectJXData = this.dataObject.projectJXData; // don't use\n        this.testURL = \"/builds\" + this.info.url;\n    }\n    getJSON() {\n        return this.json;\n    }\n    /** */\n    getInGabarit({ id, gabarit = this.info.gabarit }) {\n        var idArr = id.split(\".\");\n        var item;\n        var children = gabarit;\n        for (var i = 0; i < idArr.length; i++) {\n            item = this._getInGabarit({ id: idArr[i], gabarit: children });\n            if (item.children) {\n                children = item.children;\n            }\n        }\n        ;\n        return item;\n    }\n    /** */\n    _getInGabarit({ id, gabarit = this.info.gabarit }) {\n        var idArr = id.split(\".\");\n        for (var i = 0; i < idArr.length; i++) {\n            idArr[i];\n        }\n        ;\n        for (var i = 0; i < gabarit.length; i++) {\n            console.log(gabarit[i].id);\n            if (gabarit[i].id == id) {\n                return gabarit[i];\n            }\n            else if (gabarit[i].type == \"Group\") {\n                console.log(\"Group\", gabarit[i].id);\n                var childrenG = this._getInGabarit({ id: id, gabarit: gabarit[i].children });\n                if (childrenG != null) {\n                    return this._getInGabarit({ id: id, gabarit: gabarit[i].children });\n                }\n                ;\n            }\n        }\n        ;\n        return null;\n    }\n    load(onFinished) {\n        this.importer.importConfig(projectData => {\n            this.json = projectData.gabaritJSON;\n            this.jx.tools.mergeObjectIn(this.info, projectData.projectInformations.project);\n            this.info.gabarit = projectData.modules[0].gabarit;\n            onFinished({ target: this });\n        });\n    }\n    save(onFinished) {\n        this.exporter.exportConfig(onFinished);\n        //this.adaptIndexHTMLPage(this.info);\n    }\n    /** */\n    sendToTest(params = null, callback = evt => { }) {\n        console.log(\"sendToTest\");\n        var options = {\n            date: true,\n            extExclude: [\"sublime-project\", \"sublime-workspace\", \"fla\", \"mov\", \"as\", \"rtf\", \"zip\", \"as2proj\", \"pdf\", \"psd\", \"txt\", \"bat\", \"rar\", \"dmg\", \"md\"],\n            fileExclude: [\"publish.js\", \"_panel.html\", \"^.*_old\", \"^.*_temp\"],\n            dirExclude: [\"^xfl$\", \"^doc$\", \"_sources_medias\", \"\\.git\", \"^Typos$\", \"^.*_old$\", \"^.*_temp$\"],\n            treeOnly: false,\n            merge: false,\n            deleteSource: false,\n            recursive: 10000 // level of recursivity in directories\n        };\n        this.jx.editor.cloneDir({\n            sourcePath: this.info.url + \"/public\",\n            destPath: this.testURL,\n            options: options\n        }, result => {\n            console.log(\"buildProject OK\", result);\n            this._generateHTMLPages({ destDir: result.destPath, jxVersion: \"intern\" }, evt => callback());\n        });\n    }\n    downloadTest() {\n        this.jx.editor.download({ url: this.testURL, prefixZip: this.info.id + \"_TEST\", internPath: this.info.id, date: true });\n    }\n    /** */\n    downloadFullProject(params = null, callback = evt => { }) {\n        console.log(\"buildProjectIntern\");\n        var options = {\n            date: false,\n            extExclude: [],\n            fileExclude: [],\n            dirExclude: [\"\\.git\"],\n            treeOnly: false,\n            merge: false,\n            deleteSource: false,\n            recursive: 10000 // level of recursivity in directories\n        };\n        this.jx.editor.cloneDir({\n            sourcePath: this.info.url,\n            destPath: \"$temp\" + this.info.url,\n            options: options\n        }, (result) => {\n            console.log(\"cloneFullProject OK\", result);\n            this.jx.editor.download({ url: result.destPath, prefixZip: this.info.id + \"_\" + this.info.version + \"_FULL\", internPath: this.info.id, date: true });\n            callback(result);\n        });\n    }\n    /** */\n    copyProject(params, callback) {\n        console.log(\"buildProject\");\n        var options = {\n            date: true,\n            extExclude: [],\n            fileExclude: [],\n            dirExclude: [],\n            // fichier_reg_exclude: [ ],    // exclude files for wich name matches these regular expressions\n            // dossier_reg_exclude: [],     // exclude directories for wich name matches these regular expressions\n            treeOnly: false,\n            merge: false,\n            deleteSource: false,\n            recursive: 10000 // level of recursivity in directories\n        };\n        this.jx.editor.cloneDir({\n            sourcePath: this.info.url,\n            destPath: \"$temp\" + this.info.url,\n            options: options\n        }, (result) => {\n            console.log(\"buildProject OK\", result);\n            callback(result);\n        });\n    }\n    /** Export project */\n    exportDial(appData) {\n        let popupContent = `\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<div class=\"col-xs-12\">\n\t\t\t\t\t\t<h4>Envoi en Test</h4>\n\t\t\t\t\t\t<div style=\"font-size:14px\">Envoie une publication du projet actuel en Test, visualisable pendant que l'on continue à modifier le projet</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<div class=\"col-xs-12\">\n\t\t\t    \t\t<button type=\"button\" class=\"btn btn-default label-info btn-lg\" title=\"Envoyer en Test\" id=\"sendToTest\"><span class=\"fa fa-share-square-o\"></span></button>\n\t\t\t    \t\t<button type=\"button\" class=\"btn btn-default\" title=\"Visualiser la version actuellement en Test\" id=\"previewTest\"><span class=\"fa fa-eye\"></span></button>\n\t\t\t    \t\t<button type=\"button\" class=\"btn btn-default\" title=\"Télécharger la version actuellement en Test\" id=\"downloadTest\"><span class=\"fa fa-download\"></span></button>\n\t\t\t    \t<div>\n\t\t\t    </div>\n\n\t\t\t    <hr>\n\t\t\t    \n\t\t\t    <div class=\"row\">\n\t\t\t    \t<div class=\"col-xs-12\">\n\t\t\t    \t\t<h4>Exporter le projet actuel</h4>\n\t\t\t    \t</div>\n\t\t\t    </div>\n\n\t\t\t    <div class=\"row\">\n\t\t\t    \t<div class=\"col-xs-12\">\n\t\t\t    \t\t<button type=\"button\" class=\"btn btn-default label-success\" style=\"width:100%; text-align: left\" title=\"Télécharger une publication du projet\" id=\"buildProjectIntern\"><span class=\"fa fa-download\"></span> Publication du projet</button>\n\n\t\t\t    \t</div>\n\t\t\t    </div>\n\n\t\t\t    <hr>\n\t\t\t    <div class=\"row\">\n\t\t\t    \t<div class=\"col-xs-12\">\n\t\t\t    \t\t<button type=\"button\" class=\"btn btn-default\" style=\"width:100%; text-align: left\" title=\"Télécharger tout le dossier du projet\" id=\"downloadFullProject\"><span class=\"fa fa-download\"></span> Tout le dossier du projet</button>\n\n\t\t\t    \t</div>\n\t\t\t    </div>\n\t\t`;\n        var popup = this.jx.editor.popup({ title: \"Exporter le projet\", content: popupContent, buttons: {}, onclose: evt => { } });\n        $(popup).find(\".btn\").click((evt) => {\n            var action = evt.currentTarget.id;\n            switch (action) {\n                case \"sendToTest\":\n                    this.jx.editor.popup({ title: \"Comfirmation de l'envoi en Test\",\n                        content: \"Attention, cette action va remplacer la version actuellement en Test par la version du projet en cours.\\n Etes-vous sûr ?\",\n                        buttons: {\n                            ok: { label: \"Oui\" },\n                            no: { label: \"Non\" }\n                        },\n                        onclose: evt => {\n                            if (evt.action == \"ok\") {\n                                var popup2 = this.jx.editor.alert({ title: \"Opération en cours\", content: \"Veuillez patienter svp...\", closable: false });\n                                this.sendToTest(null, evt => {\n                                    popup2.modal('hide');\n                                });\n                            }\n                        }\n                    });\n                    break;\n                case \"buildProjectIntern\":\n                    var popup2 = this.jx.editor.alert({ title: \"Opération en cours\", content: \"Veuillez patienter svp...\", closable: false });\n                    this.buildProjectIntern(null, evt => {\n                        popup2.modal('hide');\n                    });\n                    break;\n                case \"buildProjectLastReleaseJX\":\n                    var popup2 = this.jx.editor.alert({ title: \"Opération en cours\", content: \"Veuillez patienter svp...\", closable: false });\n                    this.buildProjectLastReleaseJX(null, evt => {\n                        popup2.modal('hide');\n                    });\n                    break;\n                case \"downloadFullProject\":\n                    var popup2 = this.jx.editor.alert({ title: \"Opération en cours\", content: \"Veuillez patienter svp...\", closable: false });\n                    this.downloadFullProject(null, evt => {\n                        popup2.modal('hide');\n                    });\n                    break;\n                default:\n                    if (this[action])\n                        this[action](null, evt => { });\n            }\n        });\n        // popup.modal('hide') // close popup\n    }\n}\n"]}