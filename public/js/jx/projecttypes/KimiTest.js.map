{"version":3,"sources":["../../../src/jx/projecttypes/KimiTest.js"],"names":["KimiTest","dataObject","console","log","importer","jx","info","exporter","projectInfo","onFinished","_saveKimiTestConfig","gabarit","clear","i","length","id","quizGroup","profilsGroup","json","titre","questions","profils","conclusions","question","iq","text","_getGroupChildByID","tools","gd","value","answers","ir","push","good","style","ip","db","saveText","url","JSON","stringify","group","childID","children"],"mappings":"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","file":"KimiTest.js","sourcesContent":["import ApplicationHTML5Base from \"jx/projecttypes/ApplicationHTML5Base\";\nimport Importer from \"jx/projecttypes/editorformattype2/Importer\";\nimport Exporter from \"jx/projecttypes/editorformattype2/Exporter\";\nexport default class KimiTest extends ApplicationHTML5Base {\n    constructor(dataObject) {\n        super(dataObject);\n    }\n    _create() {\n        console.log(\"ApplicationHTML5 create\");\n        super._create();\n        this.importer = new Importer(this.jx, this.info);\n        this.exporter = new Exporter(this.jx, { projectInfo: this.info });\n    }\n    save(onFinished) {\n        super.save(evt => {\n            this._saveKimiTestConfig(onFinished);\n        });\n    }\n    _saveKimiTestConfig() {\n        var gabarit = this.info.gabarit;\n        console.clear();\n        console.log(\"_saveKimiTestConfig\", gabarit);\n        for (var i = 0; i < gabarit.length; i++) {\n            if (gabarit[i].id == \"QUIZ\") {\n                var quizGroup = gabarit[i];\n            }\n            else if (gabarit[i].id == \"PROFILS\") {\n                var profilsGroup = gabarit[i];\n            }\n        }\n        var json = { titre: {}, questions: [], profils: {}, conclusions: {} };\n        var question;\n        for (var iq = 1; iq <= 10; iq++) {\n            question = { id: iq, text: this._getGroupChildByID(quizGroup, \"Q\" + this.jx.tools.gd(iq, 2) + \"_T\").value, answers: [] };\n            for (var ir = 1; ir <= 3; ir++) {\n                question.answers.push({ id: ir, text: this._getGroupChildByID(quizGroup, \"Q\" + this.jx.tools.gd(iq, 2) + \"_R\" + this.jx.tools.gd(ir, 2) + \"_T\").value, good: (ir == 1) });\n            }\n            ;\n            json.questions.push(question);\n        }\n        ;\n        json.titre = {\n            text: this._getGroupChildByID(quizGroup, \"Title\").value,\n            style: { \"fontName\": \"Harimau\", \"fontStyle\": \"normal\", \"fontSize\": \"30px\", \"color\": \"#000000\" }, \"offset\": { \"x\": 0, \"y\": 0 }\n        };\n        for (var ip = 1; ip <= 3; ip++) {\n            json.profils[ip] = this._getGroupChildByID(profilsGroup, \"PROFIL_0\" + ip + \"_T\").value;\n            json.conclusions[ip] = this._getGroupChildByID(profilsGroup, \"CONCLU_0\" + ip).value;\n        }\n        ;\n        // console.log(JSON.stringify(json, null, 4));\n        this.jx.db.saveText(this.info.url + \"/public/src/config.js\", \"var editorGameConfig=\" + JSON.stringify(json, null, 4), () => { });\n    }\n    _getGroupChildByID(group, childID) {\n        for (var i = 0; i < group.children.length; i++) {\n            if (group.children[i].id == childID) {\n                return group.children[i];\n            }\n        }\n        ;\n        return null;\n    }\n}\n"]}