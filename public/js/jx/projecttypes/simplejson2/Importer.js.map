{"version":3,"sources":["../../../../src/jx/projecttypes/simplejson2/Importer.js"],"names":["Importer","jx","dataObject","importData","moduleData","overrideConfig","window","configURL","onFinished","_loadJson","json","jsonUrl","location","href","substr","lastIndexOf","db","addResources","id","type","src","load","$","proxy","_jsonLoaded","Event","jsonResource","findOne","console","log","debug","fatal","data","projectData","resources","i","length","projectInformations","value","push","_finish","_destroy","removeResources","resourceInfos","resourceArray","resourceInfo","resource","modulejsonName"],"mappings":"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","file":"Importer.js","sourcesContent":["import JXObject from \"jx/core/JXObject\";\nimport Resource from \"jx/core/Resource\";\nimport ImportData from \"jx/core/dataobjects/ImportData\";\nclass Importer extends JXObject {\n    constructor(jx, dataObject) {\n        super({ jx });\n        this.importData = new ImportData();\n        this.moduleData = null;\n        this.overrideConfig = window[\"overrideJXConfig\"] || {};\n        this.configURL = this.overrideConfig.configURL || \"assets/config.json\";\n    }\n    importConfig(onFinished) {\n        //console.log(this)\n        this.onFinished = onFinished;\n        this._loadJson();\n    }\n    _loadJson() {\n        //console.log(\"loadJSON\")\n        this.json = null;\n        this.jsonUrl = window.location.href.substr(0, location.href.lastIndexOf(\"/\") + 1) + \"\" + this.configURL;\n        this.jx.db.addResources({ id: 'configJSON', type: \"json\", src: this.jsonUrl });\n        this.jx.db.load({ id: 'configJSON' }, $.proxy(this._jsonLoaded, this));\n    }\n    _jsonLoaded(Event) {\n        //console.log(\"loadedJSON\")\n        var jsonResource = this.jx.db.findOne({ id: 'configJSON' });\n        if (!jsonResource) {\n            console.log(this.jx.debug.fatal(\"No Data File\"));\n        }\n        this.json = jsonResource.data;\n        var projectData = this.json[\"projectData\"];\n        this.importData.resources = [];\n        for (var i = 0; i < projectData.length; i++) {\n            if (projectData[i].id == \"Informations\") {\n                this.importData.projectInformations = projectData[i].value;\n            }\n            else {\n                this.importData.resources.push(projectData[i]);\n            }\n        }\n        ;\n        this._finish();\n    }\n    _finish() {\n        //console.log(\"finish\")\n        this._destroy();\n        // if(this.importData.check()){\n        this.onFinished(this.importData);\n        // }\n        // else{\n        // \tconsole.warn(\"Cannot initialise application. Import data malformed\");\n        // }\n    }\n    _destroy() {\n        this.jx.db.removeResources({ id: 'configJSON' });\n    }\n    _getResources() {\n        var resourceInfos = this.moduleData[\"resources\"];\n        var resourceArray = [];\n        for (var i = 0; i < resourceInfos.length; i++) {\n            var resourceInfo = resourceInfos[i];\n            var resource = new Resource(resourceInfo);\n            resourceArray.push(resource);\n        }\n        return resourceArray;\n    }\n    _getStyles() {\n        return this.moduleData[\"styles\"] || [];\n    }\n    _getEntryPointPath() {\n        for (var modulejsonName in this.json[\"entry-point\"]) {\n            return modulejsonName;\n            break;\n        }\n    }\n}\nexport default Importer;\n"]}