{"version":3,"sources":["../../../../src/jx/projecttypes/simplejson/Importer.js"],"names":["Importer","jx","dataObject","importData","moduleData","overrideConfig","window","configURL","onFinished","_loadJson","json","jsonUrl","location","href","substr","lastIndexOf","db","addResources","id","type","src","load","$","proxy","_jsonLoaded","Event","jsonResource","findOne","console","log","debug","fatal","data","formatJSON","mergeObject","ProjectInformations","status","modulePath","_getEntryPointPath","projectInformations","resources","_getResources","_finish","resourceInfos","resourceArray","i","length","resourceInfo","resource","push","modulejsonName","projectData","value","_destroy","removeResources"],"mappings":"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","file":"Importer.js","sourcesContent":["import JXObject from \"jx/core/JXObject\";\nimport Resource from \"jx/core/Resource\";\nimport Tools from \"jx/core/utils/Tools\";\nimport ImportData from \"jx/core/dataobjects/ImportData\";\nclass Importer extends JXObject {\n    constructor(jx, dataObject) {\n        super({ jx });\n        this.importData = new ImportData();\n        this.moduleData = null;\n        this.overrideConfig = window[\"overrideJXConfig\"] || {};\n        this.configURL = this.overrideConfig.configURL || \"assets/config.json\";\n    }\n    importConfig(onFinished) {\n        //console.log(this)\n        this.onFinished = onFinished;\n        this._loadJson();\n    }\n    _loadJson() {\n        //console.log(\"loadJSON\")\n        this.json = null;\n        this.jsonUrl = window.location.href.substr(0, location.href.lastIndexOf(\"/\") + 1) + \"\" + this.configURL;\n        this.jx.db.addResources({ id: 'configJSON', type: \"json\", src: this.jsonUrl });\n        this.jx.db.load({ id: 'configJSON' }, $.proxy(this._jsonLoaded, this));\n    }\n    _jsonLoaded(Event) {\n        //console.log(\"loadedJSON\")\n        // find json resource\n        var jsonResource = this.jx.db.findOne({ id: 'configJSON' });\n        if (!jsonResource) {\n            console.log(this.jx.debug.fatal(\"No Data File\"));\n        }\n        this.json = jsonResource.data;\n        // get formatJSON\n        var formatJSON = jsonResource.data.formatJSON || \"SimpleJSON1\";\n        this[\"_jsonAnalyse_\" + formatJSON]();\n    }\n    /**\n     * First json format not used anymore. (see rather _jsonAnalyse_SimpleJSON2)\n     * @obsolete\n     */\n    _jsonAnalyse_SimpleJSON1() {\n        Tools.mergeObject(this.json, { ProjectInformations: { status: \"closed\" } });\n        this.importData.modulePath = this._getEntryPointPath();\n        this.moduleData = this.json[\"entry-point\"][this.importData.modulePath];\n        this.importData.projectInformations = this.json[\"ProjectInformations\"];\n        this.importData.projectInformations = Tools.mergeObject(this.importData.projectInformations, this.overrideConfig);\n        this.importData.resources = this._getResources();\n        this._finish();\n    }\n    _getResources() {\n        var resourceInfos = this.moduleData[\"resources\"];\n        var resourceArray = [];\n        for (var i = 0; i < resourceInfos.length; i++) {\n            var resourceInfo = resourceInfos[i];\n            var resource = new Resource(resourceInfo);\n            resourceArray.push(resource);\n        }\n        return resourceArray;\n    }\n    _getEntryPointPath() {\n        for (var modulejsonName in this.json[\"entry-point\"]) {\n            return modulejsonName;\n            break;\n        }\n    }\n    /**\n     */\n    _jsonAnalyse_SimpleJSON2() {\n        var projectData = this.json[\"projectData\"];\n        this.importData.resources = [];\n        for (var i = 0; i < projectData.length; i++) {\n            if (projectData[i].id == \"Informations\") {\n                this.importData.projectInformations = projectData[i].value;\n            }\n            else {\n                this.importData.resources.push(projectData[i]);\n            }\n        }\n        ;\n        this._finish();\n    }\n    _finish() {\n        //console.log(\"finish\")\n        this._destroy();\n        // if (this.importData.check()) {\n        this.onFinished(this.importData);\n        // }\n        // else {\n        // \tconsole.warn(\"Cannot initialise application. Import data malformed\");\n        // }\n    }\n    _destroy() {\n        this.jx.db.removeResources({ id: 'configJSON' });\n    }\n}\nexport default Importer;\n"]}