{"version":3,"sources":["../../../../src/jx/editor/compitemsedit/Text.js"],"names":["textInput","Text","controller","params","commonLib","jx","item","$","prop","id","find","text","description","editable","undefined","html","value","addEventListener","event","onChangeData","innerHTML","replace","click","console","log","target","panelInfo","css"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,QAAIA,4+BAAJ;;QAwBMC,I;;;AACF,sBAAYC,UAAZ,EAAwBC,MAAxB,EAAgC;AAAA;;AAAA;;AAE5B,kBAAKD,UAAL,GAAkBA,UAAlB;AACA,kBAAKE,SAAL,GAAiB,qBAAW,EAAEC,IAAI,MAAKA,EAAX,EAAX,CAAjB;AACA,gBAAIC,OAAOC,EAAEP,SAAF,CAAX;AACAM,iBAAKE,IAAL,CAAU,IAAV,EAAgBL,OAAOM,EAAvB;;AAEAH,iBAAKI,IAAL,CAAU,cAAV,EAA0BC,IAA1B,CAA+BR,OAAOS,WAAP,IAAsB,EAArD;;AAQAN,iBAAKI,IAAL,CAAU,QAAV,EAAoBF,IAApB,CAAyB,UAAzB,EAAsCL,OAAOU,QAAP,IAAmBC,SAApB,GAAiC,CAACX,OAAOU,QAAzC,GAAoD,KAAzF;AACAP,iBAAKI,IAAL,CAAU,QAAV,EAAoBK,IAApB,CAAyBZ,OAAOa,KAAP,IAAgB,EAAzC;AACAV,iBAAK,CAAL,EAAQW,gBAAR,CAAyB,QAAzB,EAAmC,UAACC,KAAD,EAAW;AAAE,sBAAKhB,UAAL,CAAgBiB,YAAhB,CAA6BD,KAA7B;AAAsC,aAAtF;AACAZ,iBAAKS,IAAL,CAAUT,KAAK,CAAL,EAAQc,SAAR,CAAkBC,OAAlB,CAA0B,IAA1B,EAAgClB,OAAOM,EAAvC,EAA2CY,OAA3C,CAAmD,cAAnD,EAAmElB,OAAOS,WAAP,IAAsB,EAAzF,CAAV;AACAN,iBAAKI,IAAL,CAAU,OAAV,EAAmBY,KAAnB,CAAyB,UAACJ,KAAD,EAAW;AAChCK,wBAAQC,GAAR,CAAY,MAAZ,EAAoBN,MAAMO,MAA1B,EAAkCnB,KAAK,CAAL,EAAQG,EAA1C;AACA,oBAAIiB,YAAYpB,KAAKI,IAAL,CAAU,oBAAV,CAAhB;AACAgB,0BAAUC,GAAV,CAAc,SAAd,EAA0BD,UAAUC,GAAV,CAAc,SAAd,KAA4B,MAA5B,GAAqC,QAArC,GAAgD,MAA1E;AACH,aAJD;AAKA,kBAAKrB,IAAL,GAAYA,IAAZ;AAxB4B;AAyB/B;;;;;sBAEUL,I","file":"Text.js","sourcesContent":["import JXObject from \"jx/core/JXObject\";\nimport Common from \"jx/editor/editionitems/Common\";\nlet textInput = `\n<div class=\"form-group row\">\n    <div class=\"row\">\n      <div class=\"col-xs-5\">\n          <div class=\"input-group\">\n              <span id=\"check\" class=\"input-group-addon\"><span class=\"fa fa-font\"></span></span>\n              <input type=\"text\" class=\"form-control\" id=\"textSound\" value=\"ID\" readonly=\"true\" >\n          </div>\n      </div>\n      <div class=\"col-xs-1\">\n           <button class=\"btn btn-default\" title=\"Informations\" id=\"info\"><span class=\"fa fa-info\"></span></button>\n      </div>\n   <div class=\"col-xs-6\">\n        <textarea id=\"value\" type=\"textarea\" style=\"resize:vertical\" spellcheck=\"true\"  rows=\"1\" class=\"form-control\">$VALUE</textarea>\n   </div>\n   </div>\n      <div  id=\"informationsPanel\" class=\"row\"  style=\"display:none;\">\n          <div class=\"col-xs-12\" id=\"informationsText\">\n          <div class\"xinputtext\" id=\"description\" ></div>\n\n          </div>\n      </div>\n</div>\n`;\nclass Text extends JXObject {\n    constructor(controller, params) {\n        super();\n        this.controller = controller;\n        this.commonLib = new Common({ jx: this.jx });\n        var item = $(textInput);\n        item.prop('id', params.id);\n        //if (params.description == undefined) { item.remove($(item.description_btn)); }\n        item.find(\"#description\").text(params.description || \"\");\n        // var textarea = item.find(\"#value\")[0];\n        // $(textarea).css('height', 'auto').css('height', textarea.clientHeight);\n        //  var offset = textarea.offsetHeight - textarea.clientHeight;\n        //  var resizeTextarea = function(el) {\n        //      $(el).css('height', 'auto').css('height', el.scrollHeight + offset);\n        //  };\n        //  $(textarea).on('keyup input', function() { resizeTextarea(textarea); }).removeAttr('data-autoresize');\n        item.find(\"#value\").prop('readonly', (params.editable != undefined) ? !params.editable : false);\n        item.find(\"#value\").html(params.value || \"\");\n        item[0].addEventListener(\"change\", (event) => { this.controller.onChangeData(event); });\n        item.html(item[0].innerHTML.replace(\"ID\", params.id).replace(\"$description\", params.description || \"\"));\n        item.find(\"#info\").click((event) => {\n            console.log(\"info\", event.target, item[0].id);\n            var panelInfo = item.find(\"#informationsPanel\");\n            panelInfo.css(\"display\", (panelInfo.css(\"display\") == \"none\" ? \"inline\" : \"none\"));\n        });\n        this.item = item;\n    }\n}\nexport default Text;\n"]}