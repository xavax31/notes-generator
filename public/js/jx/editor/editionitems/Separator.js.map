{"version":3,"sources":["../../../../src/jx/editor/editionitems/Separator.js"],"names":["line","Separator","dataObject","Object","assign","id","controller","commonLib","jx","view","$","data","trim","title","find","html","description","css","panelInfo","showInfo","hideInfo","value"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,QAAIA,6FAAJ;;QAOqBC,S;;;AACjB,2BAAYC,UAAZ,EAAwB;AAAA;;AAAA,8HACdC,OAAOC,MAAP,CAAc,EAAEC,IAAI,EAAN,EAAd,EAA0BH,UAA1B,CADc;;AAEpB,kBAAKI,UAAL,GAAkB,MAAKJ,UAAL,CAAgBI,UAAlC;AACA,kBAAKC,SAAL,GAAiB,qBAAW,EAAEC,IAAI,MAAKA,EAAX,EAAX,CAAjB;AACA,kBAAKC,IAAL,GAAYC,EAAEV,IAAF,CAAZ;AACA,kBAAKW,IAAL,CAAUN,EAAV,GAAe,MAAKM,IAAL,CAAUN,EAAV,IAAgB,EAA/B;AACA,gBAAI,MAAKM,IAAL,CAAUN,EAAV,CAAaO,IAAb,MAAuB,EAAvB,IAA6B,MAAKD,IAAL,CAAUE,KAA3C,EAAkD;AAC9C,sBAAKJ,IAAL,CAAUK,IAAV,CAAe,KAAf,EAAsBC,IAAtB,CAA2B,SAAS,MAAKJ,IAAL,CAAUE,KAAV,IAAmB,MAAKF,IAAL,CAAUN,EAAtC,IAA4C,mBAAvE;AACH;AACD;AACA,gBAAI,MAAKM,IAAL,CAAUK,WAAV,IAAyB,MAAKL,IAAL,CAAUK,WAAV,CAAsBJ,IAAtB,MAAgC,EAA7D,EAAiE;AAC7D,sBAAKH,IAAL,CAAUK,IAAV,CAAe,cAAf,EAA+BC,IAA/B,CAAoC,MAAKJ,IAAL,CAAUK,WAA9C;AACH;AACD;AAboB;AAcvB;;;;uCAEU;AACP,qBAAKP,IAAL,CAAUK,IAAV,CAAe,oBAAf,EAAqCG,GAArC,CAAyC,SAAzC,EAAoD,QAApD;AACH;;;uCAEU;AACP,qBAAKR,IAAL,CAAUK,IAAV,CAAe,oBAAf,EAAqCG,GAArC,CAAyC,SAAzC,EAAoD,MAApD;AACH;;;yCAEY;AACT,oBAAIC,YAAY,KAAKT,IAAL,CAAUK,IAAV,CAAe,oBAAf,CAAhB;AACA,oBAAII,UAAUD,GAAV,CAAc,SAAd,KAA4B,MAAhC,EAAwC;AACpC,yBAAKE,QAAL;AACH,iBAFD,MAGK;AACD,yBAAKC,QAAL;AACH;AACJ;;;8BACQC,K,EAAO,CAEf;;;;;;sBApCgBpB,S","file":"Separator.js","sourcesContent":["import VisualComponent from \"jx/core/comps/VisualComponent\";\nimport Common from \"jx/editor/editionitems/Common\";\nlet line = `\n<div>\n\t<hr>\n\t<div id=\"id\"></div>\n\t<div id=\"description\"></div>\n</div>\n`;\nexport default class Separator extends VisualComponent {\n    constructor(dataObject) {\n        super(Object.assign({ id: \"\" }, dataObject));\n        this.controller = this.dataObject.controller;\n        this.commonLib = new Common({ jx: this.jx });\n        this.view = $(line);\n        this.data.id = this.data.id || \"\";\n        if (this.data.id.trim() != \"\" || this.data.title) {\n            this.view.find(\"#id\").html(\"<b>\" + (this.data.title || this.data.id) + \" : </b><br/><br/>\");\n        }\n        ;\n        if (this.data.description && this.data.description.trim() != \"\") {\n            this.view.find(\"#description\").html(this.data.description);\n        }\n        ;\n    }\n    /** show/hide info panel of item */\n    showInfo() {\n        this.view.find(\"#informationsPanel\").css(\"display\", \"inline\");\n    }\n    /** show/hide info panel of item */\n    hideInfo() {\n        this.view.find(\"#informationsPanel\").css(\"display\", \"none\");\n    }\n    /** show/hide info panel of item */\n    toggleInfo() {\n        var panelInfo = this.view.find(\"#informationsPanel\");\n        if (panelInfo.css(\"display\") == \"none\") {\n            this.showInfo();\n        }\n        else {\n            this.hideInfo();\n        }\n    }\n    set lock(value) {\n        //throw \"not implemented in \" + (this);\n    }\n}\n"]}