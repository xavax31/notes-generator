{"version":3,"sources":["../../../../src/jx/editor/editionitems/SimpleText.js"],"names":["textInput","SimpleText","dataObject","controller","commonLib","jx","item","$","prop","data","id","find","editable","undefined","html","value","addEventListener","event","onchanged","dispatch","view"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,QAAIA,oRAAJ;;QASqBC,U;;;AACjB,4BAAYC,UAAZ,EAAwB;AAAA;;AAAA,gIACdA,UADc;;AAEpB,kBAAKC,UAAL,GAAkB,MAAKD,UAAL,CAAgBC,UAAlC;AACA,kBAAKC,SAAL,GAAiB,qBAAW,EAAEC,IAAI,MAAKA,EAAX,EAAX,CAAjB;AACA,gBAAIC,OAAOC,EAAEP,SAAF,CAAX;AACAM,iBAAKE,IAAL,CAAU,IAAV,EAAgB,MAAKC,IAAL,CAAUC,EAA1B;AACAJ,iBAAKK,IAAL,CAAU,QAAV,EAAoBH,IAApB,CAAyB,UAAzB,EAAsC,MAAKC,IAAL,CAAUG,QAAV,IAAsBC,SAAvB,GAAoC,CAAC,MAAKJ,IAAL,CAAUG,QAA/C,GAA0D,KAA/F;AACAN,iBAAKK,IAAL,CAAU,QAAV,EAAoBG,IAApB,CAAyB,MAAKL,IAAL,CAAUM,KAAV,IAAmB,EAA5C;AACAT,iBAAKK,IAAL,CAAU,KAAV,EAAiBG,IAAjB,CAAsB,QAAQ,MAAKL,IAAL,CAAUC,EAAlB,GAAuB,MAAvB,IAAiC,EAAvD;AACAJ,iBAAK,CAAL,EAAQU,gBAAR,CAAyB,QAAzB,EAAmC,UAACC,KAAD,EAAW;AAAE,sBAAKC,SAAL,CAAeC,QAAf,CAAwBF,KAAxB;AAAiC,aAAjF;;AAEAX,iBAAKG,IAAL,CAAU,YAAV;AACA,kBAAKH,IAAL,GAAYA,IAAZ;AACA,kBAAKc,IAAL,GAAY,MAAKd,IAAjB;AAboB;AAcvB;;;;gCACW;AAER,uBAAO,KAAKA,IAAL,CAAUK,IAAV,CAAe,QAAf,EAAyB,CAAzB,EAA4BI,KAAnC;AACH;;;;;;sBAnBgBd,U","file":"SimpleText.js","sourcesContent":["import VisualComponent from \"jx/core/comps/VisualComponent\";\nimport Common from \"jx/editor/editionitems/Common\";\nlet textInput = `\n<div class=\"form-group row\">\n\n   <div class=\"col-xs-12\">\n    <div id=\"id\"></div>\n        <textarea id=\"value\" type=\"textarea\" style=\"resize:vertical\"  spellcheck=\"true\"  rows=\"1\" class=\"form-control\">$VALUE</textarea>\n   </div>\n</div>\n`;\nexport default class SimpleText extends VisualComponent {\n    constructor(dataObject) {\n        super(dataObject);\n        this.controller = this.dataObject.controller;\n        this.commonLib = new Common({ jx: this.jx });\n        var item = $(textInput);\n        item.prop('id', this.data.id);\n        item.find(\"#value\").prop('readonly', (this.data.editable != undefined) ? !this.data.editable : false);\n        item.find(\"#value\").html(this.data.value || \"\");\n        item.find(\"#id\").html(\"<b>\" + this.data.id + \"</b>\" || \"\");\n        item[0].addEventListener(\"change\", (event) => { this.onchanged.dispatch(event); });\n        // item[0].addEventListener(\"change\", (event)=>{ this.controller.onChangeData(event); }) \n        item.data(\"controller\", this);\n        this.item = item;\n        this.view = this.item;\n    }\n    get value() {\n        // console.log('GETVALUE', this.item.find(\"#value\")[0].value)\n        return this.item.find(\"#value\")[0].value;\n    }\n}\n"]}