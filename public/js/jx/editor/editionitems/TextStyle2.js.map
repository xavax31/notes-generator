{"version":3,"sources":["../../../../src/jx/editor/editionitems/TextStyle2.js"],"names":["TextStyle2","dataObject","console","log","data","fontsList","gabarit","fontStyle","findComp","id","fontFamily","jx","editor","getOptionsList","font","i","length","value","saveOnChange","onchanged","add","setOptions","styles","dispatch","target"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QACqBA,U;;;AACjB,4BAAYC,UAAZ,EAAwB;AAAA;;AACpBC,oBAAQC,GAAR,CAAY,cAAZ,EAA4BF,WAAWG,IAAvC;AACAH,uBAAWG,IAAX,CAAgBC,SAAhB,GAA4BJ,WAAWG,IAAX,CAAgBC,SAAhB,IAA6B,OAAzD;AACAJ,uBAAWK,OAAX,GAAqB,CACjB;AACI,sBAAM,YADV;AAEI,wBAAQ,UAFZ;AAGI,+BAAe,EAHnB;AAII,4BAAY,IAJhB;AAKI,yBAAS,GALb;AAMI,2BAAWL,WAAWG,IAAX,CAAgBC;AAN/B,aADiB,EASjB;AACI,sBAAM,WADV;AAEI,wBAAQ,UAFZ;AAGI,+BAAe,EAHnB;AAII,4BAAY,IAJhB;AAKI,yBAAS,GALb;AAMI,2BAAW;AANf,aATiB,EAiBjB;AACI,sBAAM,OADV;AAEI,wBAAQ,OAFZ;AAGI,4BAAY,IAHhB;AAII,+BAAe,EAJnB;AAKI,yBAAS;AALb,aAjBiB,EAwBjB;AACI,sBAAM,UADV;AAEI,wBAAQ,QAFZ;AAGI,uBAAO,CAHX;AAII,uBAAO,GAJX;AAKI,+BAAe,EALnB;AAMI,4BAAY,IANhB;AAOI,yBAAS;AAPb,aAxBiB,EAiCjB;AACI,sBAAM,WADV;AAEI,wBAAQ,UAFZ;AAGI,+BAAe,EAHnB;AAII,4BAAY,IAJhB;AAKI,yBAAS,QALb;AAMI,2BAAW,CACP,MADO,EAEP,QAFO,EAGP,OAHO,EAIP,SAJO;AANf,aAjCiB,EA8CjB;AACI,sBAAM,UADV;AAEI,wBAAQ,UAFZ;AAGI,2bAHJ;AAUI,4BAAY,IAVhB;AAWI,yBAAS,MAXb;AAYI,2BAAW,CACP,MADO,EAEP,SAFO,EAGP,QAHO,EAIP,QAJO;AAZf,aA9CiB,EAiEjB;AACI,sBAAM,EADV;AAEI,wBAAQ;AAFZ,aAjEiB,CAArB;AAHoB,2HAyEdJ,UAzEc;AA0EvB;;;;sCACS;AAAA;;AACN;AACA,oBAAIM,YAAY,KAAKC,QAAL,CAAc,EAAEC,IAAI,WAAN,EAAd,CAAhB;AACA,oBAAIC,aAAa,KAAKF,QAAL,CAAc,EAAEC,IAAI,YAAN,EAAd,CAAjB;;AAEA,oBAAIJ,YAAY,KAAKM,EAAL,CAAQC,MAAR,CAAeC,cAAf,CAA8B,gBAA9B,CAAhB;AACA,oBAAIC,aAAJ;AACA,qBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIV,UAAUW,MAA9B,EAAsCD,GAAtC,EAA2C;AACvC,wBAAIV,UAAUU,CAAV,EAAaN,EAAb,IAAmBC,WAAWO,KAAlC,EAAyC;AACrCH,+BAAOT,UAAUU,CAAV,CAAP;AACA;AACH;AACD;AACH;AACD;;AAEAL,2BAAWQ,YAAX,GAA0B,KAA1B;AACAR,2BAAWS,SAAX,CAAqBC,GAArB,CAAyB,eAAO;AAC5Bb,8BAAUc,UAAV,CAAqBP,KAAKQ,MAA1B;AACAf,8BAAUY,SAAV,CAAoBI,QAApB,CAA6B,EAAEC,cAAF,EAA7B;AACH,iBAHD;AAIAjB,0BAAUc,UAAV,CAAqBP,KAAKQ,MAA1B,EAAkC,KAAKlB,IAAL,CAAUa,KAAV,CAAgBV,SAAlD;AACH;;;;;;sBAlGgBP,U","file":"TextStyle2.js","sourcesContent":["import GabaritObject from \"jx/editor/editionitems/GabaritObject\";\nexport default class TextStyle2 extends GabaritObject {\n    constructor(dataObject) {\n        console.log(\"do TextStyle\", dataObject.data);\n        dataObject.data.fontsList = dataObject.data.fontsList || \"fonts\";\n        dataObject.gabarit = [\n            {\n                \"id\": \"fontFamily\",\n                \"type\": \"ComboBox\",\n                \"description\": \"\",\n                \"editable\": true,\n                \"value\": \"o\",\n                \"options\": dataObject.data.fontsList\n            },\n            {\n                \"id\": \"fontStyle\",\n                \"type\": \"ComboBox\",\n                \"description\": \"\",\n                \"editable\": true,\n                \"value\": \"o\",\n                \"options\": []\n            },\n            {\n                \"id\": \"color\",\n                \"type\": \"Color\",\n                \"editable\": true,\n                \"description\": \"\",\n                \"value\": \"#ffffff\"\n            },\n            {\n                \"id\": \"fontSize\",\n                \"type\": \"Number\",\n                \"min\": 1,\n                \"max\": 200,\n                \"description\": \"\",\n                \"editable\": true,\n                \"value\": \"20\"\n            },\n            {\n                \"id\": \"textAlign\",\n                \"type\": \"ComboBox\",\n                \"description\": \"\",\n                \"editable\": true,\n                \"value\": \"center\",\n                \"options\": [\n                    \"left\",\n                    \"center\",\n                    \"right\",\n                    \"justify\"\n                ]\n            },\n            {\n                \"id\": \"overflow\",\n                \"type\": \"ComboBox\",\n                \"description\": `\n \t\t\t\t      Défini le dépassement de texte de la zone prévue.\n \t\t\t\t      auto: affiche automatiquement la barre de défilement verticale si nécessaire seulement.\n \t\t\t\t      visible: le texte dépasse en bas sans se soucier de la limite.\n \t\t\t\t      hidden: la partie qui dépasse est cachée.\n \t\t\t\t      scroll: affiche toujours les barres de défilement, nécessaire ou non.\n \t\t\t\t      `,\n                \"editable\": true,\n                \"value\": \"auto\",\n                \"options\": [\n                    \"auto\",\n                    \"visible\",\n                    \"hidden\",\n                    \"scroll\"\n                ]\n            },\n            {\n                \"id\": \"\",\n                \"type\": \"Separator\"\n            }\n        ];\n        super(dataObject);\n    }\n    _create() {\n        super._create();\n        let fontStyle = this.findComp({ id: \"fontStyle\" });\n        let fontFamily = this.findComp({ id: \"fontFamily\" });\n        //-- get font styles\n        let fontsList = this.jx.editor.getOptionsList(\"resourcesFonts\");\n        let font;\n        for (var i = 0; i < fontsList.length; i++) {\n            if (fontsList[i].id == fontFamily.value) {\n                font = fontsList[i];\n                break;\n            }\n            ;\n        }\n        ;\n        //fontFamily.dispatchOnChange = false;\n        fontFamily.saveOnChange = false;\n        fontFamily.onchanged.add(evt => {\n            fontStyle.setOptions(font.styles);\n            fontStyle.onchanged.dispatch({ target: this });\n        });\n        fontStyle.setOptions(font.styles, this.data.value.fontStyle);\n    }\n}\n"]}