{"version":3,"sources":["../../../../src/jx/editor/pages/FontsPage.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","FontsPage","dataObject","Object","assign","adminMode","data","image1","font1","project","info","url","assetsDir","mainController","editor","jx","userIsGroup","fontsManager","cc","type","view","$","document","title","css","overflow","append","replace","addZipFile","id","onfiledropped","filePath","parentDirPath","parentDirName","console","log","fontConvert","fontPath","success","moveDir","sourcePath","destPath","refreshFontsList","alert","find","color","cursor","fontFamily","padding","margin","marginLeft","width","textAlign","height","window","innerHeight","onresize","flex","fontsListView","$buttonDelete","on","onButtonDeleteClicked","defaultFontSize","$input","$inputNumber","val","changeFontSize","fontSize","showFontsList","listFontDirs","listDirResult","listDir","items","filter","index","array","saveFontsGlobalesFiles","fontDirsList","fontsList","fontsJSON","i","length","item","db","loadTextPromise","text","json","JSON","parse","push","fileName","saveJSON","saveText","error","rowBgColor","empty","sort","a","b","af","toUpperCase","bf","unshift","sentence","sentenceDOM","element","$inputCell","$item","outerHTML","border","borderRadius","display","toDelete","toDeleteArr","message","is","fontName","confirm","deleteFonts","deleteFile","callback","zipPath","fontsDir","tempDir","dest","unzip","path","deleteZipFile","indexOf","loadText","matches","match","cloneDir","textField","onchanged","add","evt","target","controller","description","asset","src"],"mappings":"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","file":"FontsPage.js","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport VisualComponent from \"jx/core/comps/VisualComponent\";\nimport FontsManager from \"./fontsPageElements/FontsManager\";\nimport { badFontError, CONFIRM_DELETE_FONTS, MORE_INFO_TEXT } from \"./fontsPageElements/texts\";\nexport default class FontsPage extends VisualComponent {\n    constructor(dataObject) {\n        super(Object.assign({}, dataObject));\n        this.adminMode = false;\n        this.data = {\n            image1: \"assets/image1.jpg\",\n            font1: \"font1\",\n        };\n        this.project = {\n            info: {\n                url: \"/_temp\",\n                assetsDir: \"fonts\",\n            },\n        };\n        this.mainController = this;\n        this.editor = this.jx.editor;\n        this.adminMode = this.editor.userIsGroup(\"dev\", \"admin\", \"manager\");\n        this.fontsManager = this.cc({ type: FontsManager });\n        this.view = $(\"body\");\n        document.title = 'Gestionnnaire de fontes';\n        this.view.css(\"overflow\", \"hidden\");\n        $(\"body\").css({ overflow: \"auto\" });\n        if (this.adminMode) {\n            this.view.append(`<div>\n\t\t\t<h1 style=\"text-align:center\">Gestion des fontes</h1>\n\t\t\t<h2>Ajouter une fonte</h2>\n\t\t\t</div>`.replace(/\\n/g, \"<br/>\"));\n            this.addZipFile({\n                id: \"font1\",\n                title: \"Déposez une fonte ici (formats acceptés: ttf, otf)\",\n                onfiledropped: ({ filePath, parentDirPath, parentDirName }) => {\n                    console.log(\"Result of onfiledropped\", filePath, parentDirPath, parentDirName);\n                    // console.log(\"before convert\", destAssetsDir, itemInfo.src, \".ttf\", file.name);\n                    this.jx.editor.fontConvert({ fontPath: filePath }, result => {\n                        console.log(\"Result of fontConvert\", result);\n                        if (result.success) {\n                            this.jx.editor.moveDir({\n                                sourcePath: result.data.parentDirPath,\n                                destPath: \"/resources/milan-presse/fonts/\" + result.data.parentDirName\n                            }, result => {\n                                console.log(\"Result of moveDir\", result);\n                                this.refreshFontsList();\n                            });\n                        }\n                        else {\n                            alert(badFontError({ filePath }));\n                        }\n                    });\n                }\n            });\n            this.view.append(MORE_INFO_TEXT);\n            this.view.find(\".infosButton\").css({\n                // border: \"1px solid #FEFEFE\",\n                // borderRadius: 5,\n                color: \"grey\",\n                cursor: \"pointer\",\n                fontFamily: 10,\n                padding: 2,\n                margin: 5,\n                marginLeft: \"10px\",\n                width: \"80px\",\n                textAlign: \"center\"\n            });\n            this.view.find(\"#infosBox\").css({\n                padding: 2,\n                margin: 5,\n            });\n        }\n        this.view.append('<h2>Fontes installées</h2>');\n        this.view.height(window.innerHeight);\n        window.onresize = () => this.view.height(window.innerHeight);\n        this.view.css({ flex: 1 });\n        this.fontsListView = $('<div></div>');\n        this.fontsListView.css({\n            width: \"100%\",\n            overflow: \"auto\",\n            margin: 10\n        });\n        $(\"body\").css({\n            padding: 10\n        });\n        if (this.adminMode) {\n            let $buttonDelete = $(`<button class=\"btn btn-primary pull-right\">Supprimer la sélection</button>`);\n            $buttonDelete.on(\"click\", () => this.onButtonDeleteClicked());\n            this.view.append($buttonDelete);\n        }\n        this.defaultFontSize = 12;\n        let $input = $(`<div><label for=\"fontSize\">Font size</label>\n\t\t<input id=\"fontSize\" type=\"number\" value=\"${this.defaultFontSize}\" min=\"5\"></div>`);\n        // this.view.append($input);\n        let $inputNumber = $input.find(\"#fontSize\");\n        $inputNumber.on(\"change\", () => {\n            this.defaultFontSize = $inputNumber.val();\n            this.changeFontSize({ fontSize: this.defaultFontSize });\n        });\n        this.view.append(this.fontsListView);\n        this.showFontsList();\n    }\n    changeFontSize({ fontSize }) {\n        this.fontsListView.find(\".sequence\").css({ \"font-size\": fontSize + \"pt\" });\n    }\n    refreshFontsList() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let listDirResult = yield this.listFontDirs();\n            let listDir = listDirResult.items;\n            listDir = listDir.filter((value, index, array) => {\n                return value !== \".DS_Store\" && value !== \"fonts.css\" && value !== \"fonts.json\";\n            });\n            console.log(listDir);\n            yield this.saveFontsGlobalesFiles({ fontDirsList: listDir });\n            console.log(\"FINISH FONT IMPORT\");\n            yield this.showFontsList();\n        });\n    }\n    listFontDirs() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve) => {\n                this.editor.listDir(\"/resources/milan-presse/fonts\", {}, (result) => {\n                    resolve(result);\n                });\n            });\n        });\n    }\n    saveFontsGlobalesFiles({ fontDirsList }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let fontsList = [];\n            let fontsJSON = { fontsList };\n            let css = \"\";\n            for (let i = 0; i < fontDirsList.length; i++) {\n                const item = fontDirsList[i];\n                let text = (yield this.jx.db.loadTextPromise(\"/resources/milan-presse/fonts/\" + item + \"/font.json\"));\n                let json = JSON.parse(text);\n                fontsList.push(Object.assign(Object.assign({}, json), { fileName: item }));\n                console.log(json);\n                css += `@import url(\"./${item}/font.css\");\\n`;\n            }\n            yield new Promise(resolve => this.jx.db.saveJSON(\"/resources/milan-presse/fonts/fonts.json\", fontsJSON, () => resolve(true)));\n            yield new Promise(resolve => this.jx.db.saveText(\"/resources/milan-presse/fonts/fonts.css\", css, () => resolve(true)));\n        });\n    }\n    showFontsList() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let text = (yield this.jx.db.loadTextPromise(\"/resources/milan-presse/fonts/fonts.json\"));\n            if (text.error) {\n                return;\n            }\n            let fontsList = JSON.parse(text).fontsList;\n            let rowBgColor = -1;\n            this.fontsListView.empty();\n            const items = fontsList;\n            items.sort(function (a, b) {\n                let af = a.fontFamily.toUpperCase(), bf = b.fontFamily.toUpperCase();\n                if (af < bf) {\n                    return -1;\n                }\n                if (af > bf) {\n                    return 1;\n                }\n                return 0;\n            });\n            items.unshift({ fontFamily: \"Arial\" });\n            let sentence = \"abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ 0123456789 éèçàù$€&()[]{}°§*£%+=-_/:;.?,<>\";\n            let sentenceDOM = \"\";\n            for (let i = 0; i < sentence.length; i++) {\n                const element = sentence[i];\n                sentenceDOM += `<div class=\"letter\">${element} </div>`;\n            }\n            for (let i = 0; i < items.length; i++) {\n                let fontFamily = items[i].fontFamily;\n                let fileName = items[i].fileName;\n                let $inputCell = $(`<input type=\"checkbox\" class=\"delete\" data-fontName=\"${fontFamily}\"  data-fileName=\"${fileName}\" />`);\n                const $item = $(`\n\t\t\t\t<div>\n\t\t\t\t\t<div class=\"delete-box\"/>\n\t\t\t\t\t<div class=\"font-name\">\n\t\t\t\t\t${(i === 0) ? \"\" : (this.adminMode ? $inputCell[0].outerHTML + \" \" : \"\") + fontFamily}\n\t\t\t\t\t</div>\n\t\t\t\t\t<span class=\"sequence\">${sentenceDOM}</span>\n\t\t\t\t</div>\n\t\t\t`);\n                if (i === 0) {\n                    $item.css({\n                        padding: 5,\n                        margin: 2,\n                        width: \"2000px\",\n                    });\n                }\n                else {\n                    $item.css({\n                        padding: 5,\n                        margin: 2,\n                        width: \"2000px\",\n                        border: \"1px solid grey\",\n                        borderRadius: 10,\n                        \"background-color\": rowBgColor === 1 ? \"white\" : \"#eeeeee\"\n                    });\n                }\n                $item.find(\".font-name\").css({\n                    display: \"inline-block\",\n                    width: \"300px\",\n                    fontSize: \"12pt\",\n                    // border: \"1px solid grey\",\n                    \"background-color\": rowBgColor === 1 ? \"white\" : \"#eeeeee\"\n                });\n                $item.find(\".sequence\").css({\n                    // display: \"inline-block\",\n                    \"font-family\": fontFamily\n                });\n                $item.find(\".letter\").css({\n                    \"font-size\": \"inherit\",\n                    display: \"inline-block\",\n                    \"text-align\": \"center\",\n                    width: \"15px\",\n                    \"border-right\": \"1px solid #aaaaaa\"\n                });\n                this.fontsListView.append($item);\n                rowBgColor *= -1;\n            }\n            this.changeFontSize({ fontSize: this.defaultFontSize });\n        });\n    }\n    onButtonDeleteClicked() {\n        let toDelete = this.fontsListView.find(\".delete\");\n        let toDeleteArr = [];\n        let message = CONFIRM_DELETE_FONTS;\n        for (let i = 0; i < toDelete.length; i++) {\n            const element = $(toDelete[i]);\n            if (element.is(\":checked\")) {\n                toDeleteArr.push({\n                    fontName: element.data(\"fontname\"),\n                    fileName: element.data(\"filename\")\n                });\n                console.log({\n                    fontName: element.data(\"fontname\"),\n                    fileName: element.data(\"filename\")\n                });\n                message += \" - \" + element.data(\"fontname\") + \"\\n\";\n            }\n        }\n        if (toDeleteArr.length > 0) {\n            if (confirm(message)) {\n                console.log(\"confirmation of delete\");\n                this.deleteFonts({ fontsList: toDeleteArr });\n            }\n        }\n    }\n    deleteFonts({ fontsList }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (let i = 0; i < fontsList.length; i++) {\n                const item = fontsList[i];\n                yield new Promise(resolve => this.editor.deleteFile(\"/resources/milan-presse/fonts/\" + item.fileName, () => resolve(true)));\n            }\n            this.refreshFontsList();\n        });\n    }\n    convertFont({ fontPath }, callback = (result) => { }) {\n        this.editor.fontConvert({ fontPath }, result => {\n            console.log(result);\n        });\n    }\n    analyseFont({ zipPath = null } = {}) {\n        const fontsDir = \"/resources/milan-presse/fonts\";\n        const tempDir = \"/_temp/fonts\";\n        zipPath = tempDir + \"/font1.zip\";\n        const dest = tempDir + \"/newfont\";\n        this.editor.unzip({ path: zipPath, dest, deleteZipFile: false }, () => {\n            this.editor.listDir(dest, {}, result => {\n                console.log(result);\n                let items = result.items;\n                if (items.indexOf(\"onlinefontconverter.com\") !== -1) {\n                    this.jx.db.loadText(dest + \"/\" + \"onlinefontconverter.com/converted-files/font.css\", (result) => {\n                        console.log(result);\n                        let matches = result.match(/font-family:*\\s'(.*)';/);\n                        let fontName = matches[1];\n                        console.log(fontName);\n                        this.editor.cloneDir({\n                            sourcePath: dest + \"/\" + \"onlinefontconverter.com/converted-files\",\n                            destPath: fontsDir + \"/\" + fontName\n                        }, () => {\n                            this.refreshFontsList();\n                            alert(\"la fonte \" + fontName + \" a été ajoutée\");\n                        });\n                    });\n                }\n            });\n        });\n    }\n    addText(data) {\n        let textField = this.cc({\n            type: \"editionitems.Text\",\n            data: Object.assign({ type: \"Text\" }, data),\n        });\n        this.view.append(textField.view);\n        textField.onchanged.add((evt) => {\n            this.data[data.id] = evt.target.value;\n            console.log(this.data);\n        });\n        return textField;\n    }\n    addImage(data) {\n        let item = this.cc({\n            id: data.id,\n            type: \"editionitems.ImageItem\",\n            controller: this,\n            data: Object.assign({ type: \"Image\", description: \"\", asset: {\n                    src: this.data[data.id],\n                } }, data),\n        });\n        this.view.append(item.view);\n        return item;\n    }\n    addZipFile(data) {\n        let item = this.cc({\n            id: data.id,\n            type: \"editionitems.FontItem\",\n            controller: this,\n            onfiledropped: data.onfiledropped,\n            data: Object.assign({ type: \"FontPack\", deleteZipFile: false, description: \"\", asset: {\n                    src: this.data[data.id],\n                } }, data),\n        });\n        item.view.find(\"#info\").css({ display: \"none\" });\n        item.view.find(\"#openDir\").css({ display: \"none\" });\n        this.view.append(item.view);\n        return item;\n    }\n}\n"]}