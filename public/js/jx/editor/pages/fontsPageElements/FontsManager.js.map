{"version":3,"sources":["../../../../../src/jx/editor/pages/fontsPageElements/FontsManager.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","sentence","FontsManager","dataObject","Object","assign","lastSelectedFont","editor","jx","popup","$content","$","$btnShowFull","css","cursor","on","tools","openURL","getVisualFontsListChoice","onclose","modal","$list","append","title","width","content","console","log","evt","_fontsList","db","loadTextPromise","text","JSON","parse","fontsList","showSentence","getFontsList","$listView","height","window","innerHeight","overflow","onresize","rowBgColor","items","sort","a","b","af","fontFamily","toUpperCase","bf","unshift","fileName","sentenceDOM","i","length","element","$item","padding","margin","textAlign","border","borderRadius","find","display","fontSize"],"mappings":"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","file":"FontsManager.js","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport Component from \"jx/core/comps/Component\";\nlet sentence = \"abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ 0123456789 éèçàù$€&()[]{}°§*£%+=-_/:;.?,<>\";\nexport default class FontsManager extends Component {\n    constructor(dataObject) {\n        super(Object.assign({}, dataObject));\n        this.lastSelectedFont = null;\n        this.editor = this.jx.editor;\n    }\n    showChoicePanel() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let popup;\n                let $content = $('<div/>');\n                let $btnShowFull = $(`<button class=\"btn btn-link pull-right\" title=\"Afficher l'aperçu des fontes\"><i class=\"fa fa-eye fa-3x\" aria-hidden=\"true\"></i></button>`);\n                $btnShowFull.css({ cursor: \"pointer\" });\n                $btnShowFull.on(\"click\", () => this.jx.tools.openURL(\"fonts_dev.html#FontsPage\", \"FontsList\"));\n                let $list = yield this.getVisualFontsListChoice({ onclose: () => {\n                        popup.modal('hide');\n                        resolve(true);\n                    } });\n                $content.append($btnShowFull);\n                $content.append($list);\n                popup = this.editor.popup({ title: \"Choisir une fonte\", width: '520px', content: $content, onclose: evt => {\n                        console.log(evt);\n                        resolve(evt);\n                    } });\n                console.log(\"popup\", popup);\n            }));\n        });\n    }\n    getFontsList() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._fontsList) {\n                let text = (yield this.jx.db.loadTextPromise(\"/resources/milan-presse/fonts/fonts.json\"));\n                this._fontsList = JSON.parse(text).fontsList;\n            }\n            return this._fontsList;\n        });\n    }\n    getVisualFontsListChoice({ showSentence = false, onclose } = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let fontsList = yield this.getFontsList();\n            let $listView = $('<div/>');\n            $listView.css({\n                // flex: 1,\n                width: '100%',\n                height: window.innerHeight - 200,\n                overflow: 'auto'\n            });\n            window.onresize = () => {\n                $listView.css({ height: window.innerHeight - 300 });\n            };\n            let rowBgColor = -1;\n            const items = fontsList;\n            items.sort(function (a, b) {\n                let af = a.fontFamily.toUpperCase(), bf = b.fontFamily.toUpperCase();\n                if (af < bf) {\n                    return -1;\n                }\n                if (af > bf) {\n                    return 1;\n                }\n                return 0;\n            });\n            if (showSentence)\n                items.unshift({ fontFamily: \"Arial\", fileName: \"\" });\n            let sentenceDOM = \"\";\n            if (showSentence) {\n                for (let i = 0; i < sentence.length; i++) {\n                    const element = sentence[i];\n                    sentenceDOM += `<div class=\"letter\">${element} </div>`;\n                }\n            }\n            for (let i = 0; i < items.length; i++) {\n                let fontFamily = items[i].fontFamily;\n                let fileName = items[i].fileName;\n                const $item = $(`\n\t\t\t\t<div>\n\t\t\t\t\t<div class=\"font-name\">\n\t\t\t\t\t${fontFamily}\n\t\t\t\t\t</div>\n\t\t\t\t\t${showSentence ? `<span class=\"sequence\">${sentenceDOM}</span>` : ``}\n\t\t\t\t</div>\n\t\t\t`);\n                if (showSentence && i === 0) {\n                    $item.css({\n                        padding: 5,\n                        margin: 2,\n                        width: \"2000px\",\n                    });\n                }\n                else {\n                    // $item.addClass(\"btn btn-primary\")\n                    $item.css({\n                        textAlign: \"center\",\n                        cursor: \"pointer\",\n                        padding: 5,\n                        margin: 2,\n                        width: showSentence ? \"2000px\" : \"450px\",\n                        border: \"1px solid grey\",\n                        borderRadius: 10,\n                        \"background-color\": rowBgColor === 1 ? \"white\" : \"#eeeeee\"\n                    });\n                }\n                $item.find(\".font-name\").css({\n                    display: \"inline-block\",\n                    width: \"420px\",\n                    fontSize: \"12pt\",\n                    // border: \"1px solid grey\",\n                    \"background-color\": rowBgColor === 1 ? \"white\" : \"#eeeeee\"\n                });\n                $item.find(\".sequence\").css({\n                    // display: \"inline-block\",\n                    \"font-family\": fontFamily\n                });\n                $item.find(\".letter\").css({\n                    \"font-size\": \"inherit\",\n                    display: \"inline-block\",\n                    \"text-align\": \"center\",\n                    width: \"15px\",\n                    \"border-right\": \"1px solid #aaaaaa\"\n                });\n                $item.on(\"click\", () => { this.lastSelectedFont = fontFamily; onclose({ fontFamily }); });\n                $listView.append($item);\n                rowBgColor *= -1;\n            }\n            return $listView;\n        });\n    }\n}\n"]}